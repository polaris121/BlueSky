{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-client\\client\\queue_stub_helpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/ddp-client/client/queue_stub_helpers.js","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-client\\client\\queue_stub_helpers.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-client\\client\\queue_stub_helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-client/client/queue_stub_helpers.js"}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  loadAsyncStubHelpers: () => loadAsyncStubHelpers\n});\nlet DDP;\nmodule.link(\"../common/namespace.js\", {\n  DDP(v) {\n    DDP = v;\n  }\n}, 0);\nlet Connection;\nmodule.link(\"../common/livedata_connection\", {\n  Connection(v) {\n    Connection = v;\n  }\n}, 1);\n// https://forums.meteor.com/t/proposal-to-fix-issues-with-async-method-stubs/60826\n\nlet queueSize = 0;\nlet queue = Promise.resolve();\nconst loadAsyncStubHelpers = () => {\n  function queueFunction(fn) {\n    let promiseProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    queueSize += 1;\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n      resolve = _resolve;\n      reject = _reject;\n    });\n    queue = queue.finally(() => {\n      var _promise$stubPromise;\n      fn(resolve, reject);\n      return (_promise$stubPromise = promise.stubPromise) === null || _promise$stubPromise === void 0 ? void 0 : _promise$stubPromise.catch(() => {}); // silent uncaught promise\n    });\n    promise.catch(() => {}) // silent uncaught promise\n    .finally(() => {\n      queueSize -= 1;\n      if (queueSize === 0) {\n        Meteor.connection._maybeMigrate();\n      }\n    });\n    promise.stubPromise = promiseProps.stubPromise;\n    promise.serverPromise = promiseProps.serverPromise;\n    return promise;\n  }\n  let oldReadyToMigrate = Connection.prototype._readyToMigrate;\n  Connection.prototype._readyToMigrate = function () {\n    if (queueSize > 0) {\n      return false;\n    }\n    return oldReadyToMigrate.apply(this, arguments);\n  };\n  let currentMethodInvocation = null;\n\n  /**\n   * Meteor sets CurrentMethodInvocation to undefined for the reasons explained at\n   * https://github.com/meteor/meteor/blob/c9e3551b9673a7ed607f18cb1128563ff49ca96f/packages/ddp-client/common/livedata_connection.js#L578-L605\n   * The app code could call `.then` on a promise while the async stub is running,\n   * causing the `then` callback to think it is inside the stub.\n   *\n   * With the queueing we are doing, this is no longer necessary. The point\n   * of the queueing is to prevent app/package code from running while\n   * the stub is running, so we don't need to worry about this.\n   */\n\n  let oldApplyAsync = Connection.prototype.applyAsync;\n  Connection.prototype.applyAsync = function () {\n    let args = arguments;\n    let name = args[0];\n    if (currentMethodInvocation) {\n      DDP._CurrentMethodInvocation._set(currentMethodInvocation);\n      currentMethodInvocation = null;\n    }\n    const enclosing = DDP._CurrentMethodInvocation.get();\n    const alreadyInSimulation = enclosing === null || enclosing === void 0 ? void 0 : enclosing.isSimulation;\n    const isFromCallAsync = enclosing === null || enclosing === void 0 ? void 0 : enclosing._isFromCallAsync;\n    if (Meteor.connection._getIsSimulation({\n      isFromCallAsync,\n      alreadyInSimulation\n    })) {\n      // In stub - call immediately\n      return oldApplyAsync.apply(this, args);\n    }\n    let stubPromiseResolver;\n    let serverPromiseResolver;\n    const stubPromise = new Promise(r => stubPromiseResolver = r);\n    const serverPromise = new Promise(r => serverPromiseResolver = r);\n    return queueFunction((resolve, reject) => {\n      let finished = false;\n      Meteor._setImmediate(() => {\n        const applyAsyncPromise = oldApplyAsync.apply(this, args);\n        stubPromiseResolver(applyAsyncPromise.stubPromise);\n        serverPromiseResolver(applyAsyncPromise.serverPromise);\n        applyAsyncPromise.stubPromise.catch(() => {}) // silent uncaught promise\n        .finally(() => {\n          finished = true;\n        });\n        applyAsyncPromise.then(result => {\n          resolve(result);\n        }).catch(err => {\n          reject(err);\n        });\n        serverPromise.catch(() => {}); // silent uncaught promise\n      });\n      Meteor._setImmediate(() => {\n        if (!finished) {\n          console.warn(\"Method stub (\".concat(name, \") took too long and could cause unexpected problems. Learn more at https://v3-migration-docs.meteor.com/breaking-changes/call-x-callAsync.html#considerations-for-effective-use-of-meteor-callasync\"));\n        }\n      });\n    }, {\n      stubPromise,\n      serverPromise\n    });\n  };\n  let oldApply = Connection.prototype.apply;\n  Connection.prototype.apply = function (name, args, options, callback) {\n    if (this._stream._neverQueued) {\n      return oldApply.apply(this, arguments);\n    }\n\n    // Apply runs the stub before synchronously returning.\n    //\n    // However, we want the server to run the methods in the original call order\n    // so we have to queue sending the message to the server until any previous async\n    // methods run.\n    // This does mean the stubs run in a different order than the methods on the\n    // server.\n\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let {\n      methodInvoker,\n      result\n    } = oldApply.call(this, name, args, _objectSpread(_objectSpread({}, options), {}, {\n      _returnMethodInvoker: true\n    }), callback);\n    if (methodInvoker) {\n      queueFunction(resolve => {\n        this._addOutstandingMethod(methodInvoker, options);\n        resolve();\n      });\n    }\n    return result;\n  };\n\n  /**\n   * Queue subscriptions in case they rely on previous method calls\n   */\n  let queueSend = false;\n  let oldSubscribe = Connection.prototype.subscribe;\n  Connection.prototype.subscribe = function () {\n    if (this._stream._neverQueued) {\n      return oldSubscribe.apply(this, arguments);\n    }\n    queueSend = true;\n    try {\n      return oldSubscribe.apply(this, arguments);\n    } finally {\n      queueSend = false;\n    }\n  };\n  let oldSend = Connection.prototype._send;\n  Connection.prototype._send = function (params, shouldQueue) {\n    if (this._stream._neverQueued) {\n      return oldSend.apply(this, arguments);\n    }\n    if (!queueSend && !shouldQueue) {\n      return oldSend.call(this, params);\n    }\n    queueSend = false;\n    queueFunction(resolve => {\n      try {\n        oldSend.call(this, params);\n      } finally {\n        resolve();\n      }\n    });\n  };\n  let _oldSendOutstandingMethodBlocksMessages = Connection.prototype._sendOutstandingMethodBlocksMessages;\n  Connection.prototype._sendOutstandingMethodBlocksMessages = function () {\n    if (this._stream._neverQueued) {\n      return _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n    }\n    queueFunction(resolve => {\n      try {\n        _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n      } finally {\n        resolve();\n      }\n    });\n  };\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","loadAsyncStubHelpers","DDP","Connection","queueSize","queue","Promise","resolve","queueFunction","fn","promiseProps","arguments","length","undefined","reject","promise","_resolve","_reject","finally","_promise$stubPromise","stubPromise","catch","Meteor","connection","_maybeMigrate","serverPromise","oldReadyToMigrate","prototype","_readyToMigrate","apply","currentMethodInvocation","oldApplyAsync","applyAsync","args","name","_CurrentMethodInvocation","_set","enclosing","get","alreadyInSimulation","isSimulation","isFromCallAsync","_isFromCallAsync","_getIsSimulation","stubPromiseResolver","serverPromiseResolver","r","finished","_setImmediate","applyAsyncPromise","then","result","err","console","warn","concat","oldApply","options","callback","_stream","_neverQueued","methodInvoker","call","_returnMethodInvoker","_addOutstandingMethod","queueSend","oldSubscribe","subscribe","oldSend","_send","params","shouldQueue","_oldSendOutstandingMethodBlocksMessages","_sendOutstandingMethodBlocksMessages"],"sources":["packages/ddp-client/client/queue_stub_helpers.js"],"sourcesContent":["import { DDP } from \"../common/namespace.js\";\nimport { Connection } from \"../common/livedata_connection\";\n\n// https://forums.meteor.com/t/proposal-to-fix-issues-with-async-method-stubs/60826\n\nlet queueSize = 0;\nlet queue = Promise.resolve();\n\nexport const loadAsyncStubHelpers = () => {\n  function queueFunction(fn, promiseProps = {}) {\n    queueSize += 1;\n\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n      resolve = _resolve;\n      reject = _reject;\n    });\n\n    queue = queue.finally(() => {\n      fn(resolve, reject);\n\n      return promise.stubPromise?.catch(() => {}); // silent uncaught promise\n    });\n\n    promise\n      .catch(() => {}) // silent uncaught promise\n      .finally(() => {\n        queueSize -= 1;\n        if (queueSize === 0) {\n          Meteor.connection._maybeMigrate();\n        }\n      });\n\n    promise.stubPromise = promiseProps.stubPromise;\n    promise.serverPromise = promiseProps.serverPromise;\n\n    return promise;\n  }\n\n  let oldReadyToMigrate = Connection.prototype._readyToMigrate;\n  Connection.prototype._readyToMigrate = function () {\n    if (queueSize > 0) {\n      return false;\n    }\n\n    return oldReadyToMigrate.apply(this, arguments);\n  };\n\n  let currentMethodInvocation = null;\n\n  /**\n   * Meteor sets CurrentMethodInvocation to undefined for the reasons explained at\n   * https://github.com/meteor/meteor/blob/c9e3551b9673a7ed607f18cb1128563ff49ca96f/packages/ddp-client/common/livedata_connection.js#L578-L605\n   * The app code could call `.then` on a promise while the async stub is running,\n   * causing the `then` callback to think it is inside the stub.\n   *\n   * With the queueing we are doing, this is no longer necessary. The point\n   * of the queueing is to prevent app/package code from running while\n   * the stub is running, so we don't need to worry about this.\n   */\n\n  let oldApplyAsync = Connection.prototype.applyAsync;\n  Connection.prototype.applyAsync = function () {\n    let args = arguments;\n    let name = args[0];\n\n    if (currentMethodInvocation) {\n      DDP._CurrentMethodInvocation._set(currentMethodInvocation);\n      currentMethodInvocation = null;\n    }\n\n    const enclosing = DDP._CurrentMethodInvocation.get();\n    const alreadyInSimulation = enclosing?.isSimulation;\n    const isFromCallAsync = enclosing?._isFromCallAsync;\n\n    if (\n      Meteor.connection._getIsSimulation({\n        isFromCallAsync,\n        alreadyInSimulation,\n      })\n    ) {\n      // In stub - call immediately\n      return oldApplyAsync.apply(this, args);\n    }\n\n    let stubPromiseResolver;\n    let serverPromiseResolver;\n    const stubPromise = new Promise((r) => (stubPromiseResolver = r));\n    const serverPromise = new Promise((r) => (serverPromiseResolver = r));\n\n    return queueFunction(\n      (resolve, reject) => {\n        let finished = false;\n\n        Meteor._setImmediate(() => {\n          const applyAsyncPromise = oldApplyAsync.apply(this, args);\n          stubPromiseResolver(applyAsyncPromise.stubPromise);\n          serverPromiseResolver(applyAsyncPromise.serverPromise);\n\n          applyAsyncPromise.stubPromise\n            .catch(() => {}) // silent uncaught promise\n            .finally(() => {\n              finished = true;\n            });\n\n          applyAsyncPromise\n            .then((result) => {\n              resolve(result);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n\n          serverPromise.catch(() => {}); // silent uncaught promise\n        });\n\n        Meteor._setImmediate(() => {\n          if (!finished) {\n            console.warn(\n              `Method stub (${name}) took too long and could cause unexpected problems. Learn more at https://v3-migration-docs.meteor.com/breaking-changes/call-x-callAsync.html#considerations-for-effective-use-of-meteor-callasync`\n            );\n          }\n        });\n      },\n      {\n        stubPromise,\n        serverPromise,\n      }\n    );\n  };\n\n  let oldApply = Connection.prototype.apply;\n  Connection.prototype.apply = function (name, args, options, callback) {\n    if (this._stream._neverQueued) {\n      return oldApply.apply(this, arguments);\n    }\n\n    // Apply runs the stub before synchronously returning.\n    //\n    // However, we want the server to run the methods in the original call order\n    // so we have to queue sending the message to the server until any previous async\n    // methods run.\n    // This does mean the stubs run in a different order than the methods on the\n    // server.\n\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n\n    let { methodInvoker, result } = oldApply.call(this, name, args, {\n      ...options,\n      _returnMethodInvoker: true,\n    }, callback);\n\n    if (methodInvoker) {\n      queueFunction((resolve) => {\n        this._addOutstandingMethod(methodInvoker, options);\n        resolve();\n      });\n    }\n\n    return result;\n  };\n\n  /**\n   * Queue subscriptions in case they rely on previous method calls\n   */\n  let queueSend = false;\n  let oldSubscribe = Connection.prototype.subscribe;\n  Connection.prototype.subscribe = function () {\n    if (this._stream._neverQueued) {\n      return oldSubscribe.apply(this, arguments);\n    }\n\n    queueSend = true;\n    try {\n      return oldSubscribe.apply(this, arguments);\n    } finally {\n      queueSend = false;\n    }\n  };\n\n  let oldSend = Connection.prototype._send;\n  Connection.prototype._send = function (params, shouldQueue) {\n    if (this._stream._neverQueued) {\n      return oldSend.apply(this, arguments);\n    }\n\n    if (!queueSend && !shouldQueue) {\n      return oldSend.call(this, params);\n    }\n\n    queueSend = false;\n    queueFunction((resolve) => {\n      try {\n        oldSend.call(this, params);\n      } finally {\n        resolve();\n      }\n    });\n  };\n\n  let _oldSendOutstandingMethodBlocksMessages =\n    Connection.prototype._sendOutstandingMethodBlocksMessages;\n  Connection.prototype._sendOutstandingMethodBlocksMessages = function () {\n    if (this._stream._neverQueued) {\n      return _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n    }\n    queueFunction((resolve) => {\n      try {\n        _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n      } finally {\n        resolve();\n      }\n    });\n  };\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c06dafd597aa392d90f87aeaebcedc7871e6d322"}
