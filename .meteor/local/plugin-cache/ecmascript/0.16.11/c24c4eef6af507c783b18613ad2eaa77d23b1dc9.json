{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\stream_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/ddp-server/stream_server.js","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\stream_server.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\stream_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-server/stream_server.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let once;\n    module.link(\"lodash.once\", {\n      default(v) {\n        once = v;\n      }\n    }, 0);\n    let zlib;\n    module.link(\"node:zlib\", {\n      default(v) {\n        zlib = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    // By default, we use the permessage-deflate extension with default\n    // configuration. If $SERVER_WEBSOCKET_COMPRESSION is set, then it must be valid\n    // JSON. If it represents a falsey value, then we do not use permessage-deflate\n    // at all; otherwise, the JSON value is used as an argument to deflate's\n    // configure method; see\n    // https://github.com/faye/permessage-deflate-node/blob/master/README.md\n    //\n    // (We do this in an _.once instead of at startup, because we don't want to\n    // crash the tool during isopacket load if your JSON doesn't parse. This is only\n    // a problem because the tool has to load the DDP server code just in order to\n    // be a DDP client; see https://github.com/meteor/meteor/issues/3452 .)\n    var websocketExtensions = once(function () {\n      var extensions = [];\n      var websocketCompressionConfig = process.env.SERVER_WEBSOCKET_COMPRESSION ? JSON.parse(process.env.SERVER_WEBSOCKET_COMPRESSION) : {};\n      if (websocketCompressionConfig) {\n        extensions.push(Npm.require('permessage-deflate2').configure(_objectSpread({\n          threshold: 1024,\n          level: zlib.constants.Z_BEST_SPEED,\n          memLevel: zlib.constants.Z_MIN_MEMLEVEL,\n          noContextTakeover: true,\n          maxWindowBits: zlib.constants.Z_MIN_WINDOWBITS\n        }, websocketCompressionConfig || {})));\n      }\n      return extensions;\n    });\n    var pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || \"\";\n    StreamServer = function () {\n      var self = this;\n      self.registration_callbacks = [];\n      self.open_sockets = [];\n\n      // Because we are installing directly onto WebApp.httpServer instead of using\n      // WebApp.app, we have to process the path prefix ourselves.\n      self.prefix = pathPrefix + '/sockjs';\n      RoutePolicy.declare(self.prefix + '/', 'network');\n\n      // set up sockjs\n      var sockjs = Npm.require('sockjs');\n      var serverOptions = {\n        prefix: self.prefix,\n        log: function () {},\n        // this is the default, but we code it explicitly because we depend\n        // on it in stream_client:HEARTBEAT_TIMEOUT\n        heartbeat_delay: 45000,\n        // The default disconnect_delay is 5 seconds, but if the server ends up CPU\n        // bound for that much time, SockJS might not notice that the user has\n        // reconnected because the timer (of disconnect_delay ms) can fire before\n        // SockJS processes the new connection. Eventually we'll fix this by not\n        // combining CPU-heavy processing with SockJS termination (eg a proxy which\n        // converts to Unix sockets) but for now, raise the delay.\n        disconnect_delay: 60 * 1000,\n        // Allow disabling of CORS requests to address\n        // https://github.com/meteor/meteor/issues/8317.\n        disable_cors: !!process.env.DISABLE_SOCKJS_CORS,\n        // Set the USE_JSESSIONID environment variable to enable setting the\n        // JSESSIONID cookie. This is useful for setting up proxies with\n        // session affinity.\n        jsessionid: !!process.env.USE_JSESSIONID\n      };\n\n      // If you know your server environment (eg, proxies) will prevent websockets\n      // from ever working, set $DISABLE_WEBSOCKETS and SockJS clients (ie,\n      // browsers) will not waste time attempting to use them.\n      // (Your server will still have a /websocket endpoint.)\n      if (process.env.DISABLE_WEBSOCKETS) {\n        serverOptions.websocket = false;\n      } else {\n        serverOptions.faye_server_options = {\n          extensions: websocketExtensions()\n        };\n      }\n      self.server = sockjs.createServer(serverOptions);\n\n      // Install the sockjs handlers, but we want to keep around our own particular\n      // request handler that adjusts idle timeouts while we have an outstanding\n      // request.  This compensates for the fact that sockjs removes all listeners\n      // for \"request\" to add its own.\n      WebApp.httpServer.removeListener('request', WebApp._timeoutAdjustmentRequestCallback);\n      self.server.installHandlers(WebApp.httpServer);\n      WebApp.httpServer.addListener('request', WebApp._timeoutAdjustmentRequestCallback);\n\n      // Support the /websocket endpoint\n      self._redirectWebsocketEndpoint();\n      self.server.on('connection', function (socket) {\n        // sockjs sometimes passes us null instead of a socket object\n        // so we need to guard against that. see:\n        // https://github.com/sockjs/sockjs-node/issues/121\n        // https://github.com/meteor/meteor/issues/10468\n        if (!socket) return;\n\n        // We want to make sure that if a client connects to us and does the initial\n        // Websocket handshake but never gets to the DDP handshake, that we\n        // eventually kill the socket.  Once the DDP handshake happens, DDP\n        // heartbeating will work. And before the Websocket handshake, the timeouts\n        // we set at the server level in webapp_server.js will work. But\n        // faye-websocket calls setTimeout(0) on any socket it takes over, so there\n        // is an \"in between\" state where this doesn't happen.  We work around this\n        // by explicitly setting the socket timeout to a relatively large time here,\n        // and setting it back to zero when we set up the heartbeat in\n        // livedata_server.js.\n        socket.setWebsocketTimeout = function (timeout) {\n          if ((socket.protocol === 'websocket' || socket.protocol === 'websocket-raw') && socket._session.recv) {\n            socket._session.recv.connection.setTimeout(timeout);\n          }\n        };\n        socket.setWebsocketTimeout(45 * 1000);\n        socket.send = function (data) {\n          socket.write(data);\n        };\n        socket.on('close', function () {\n          self.open_sockets = self.open_sockets.filter(function (value) {\n            return value !== socket;\n          });\n        });\n        self.open_sockets.push(socket);\n\n        // only to send a message after connection on tests, useful for\n        // socket-stream-client/server-tests.js\n        if (process.env.TEST_METADATA && process.env.TEST_METADATA !== \"{}\") {\n          socket.send(JSON.stringify({\n            testMessageOnConnect: true\n          }));\n        }\n\n        // call all our callbacks when we get a new socket. they will do the\n        // work of setting up handlers and such for specific messages.\n        self.registration_callbacks.forEach(function (callback) {\n          callback(socket);\n        });\n      });\n    };\n    Object.assign(StreamServer.prototype, {\n      // call my callback when a new socket connects.\n      // also call it for all current connections.\n      register: function (callback) {\n        var self = this;\n        self.registration_callbacks.push(callback);\n        self.all_sockets().forEach(function (socket) {\n          callback(socket);\n        });\n      },\n      // get a list of all sockets\n      all_sockets: function () {\n        var self = this;\n        return Object.values(self.open_sockets);\n      },\n      // Redirect /websocket to /sockjs/websocket in order to not expose\n      // sockjs to clients that want to use raw websockets\n      _redirectWebsocketEndpoint: function () {\n        var self = this;\n        // Unfortunately we can't use a connect middleware here since\n        // sockjs installs itself prior to all existing listeners\n        // (meaning prior to any connect middlewares) so we need to take\n        // an approach similar to overshadowListeners in\n        // https://github.com/sockjs/sockjs-node/blob/cf820c55af6a9953e16558555a31decea554f70e/src/utils.coffee\n        ['request', 'upgrade'].forEach(event => {\n          var httpServer = WebApp.httpServer;\n          var oldHttpServerListeners = httpServer.listeners(event).slice(0);\n          httpServer.removeAllListeners(event);\n\n          // request and upgrade have different arguments passed but\n          // we only care about the first one which is always request\n          var newListener = function (request /*, moreArguments */) {\n            // Store arguments for use within the closure below\n            var args = arguments;\n\n            // TODO replace with url package\n            var url = Npm.require('url');\n\n            // Rewrite /websocket and /websocket/ urls to /sockjs/websocket while\n            // preserving query string.\n            var parsedUrl = url.parse(request.url);\n            if (parsedUrl.pathname === pathPrefix + '/websocket' || parsedUrl.pathname === pathPrefix + '/websocket/') {\n              parsedUrl.pathname = self.prefix + '/websocket';\n              request.url = url.format(parsedUrl);\n            }\n            oldHttpServerListeners.forEach(function (oldListener) {\n              oldListener.apply(httpServer, args);\n            });\n          };\n          httpServer.addListener(event, newListener);\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","once","zlib","__reifyWaitForDeps__","websocketExtensions","extensions","websocketCompressionConfig","process","env","SERVER_WEBSOCKET_COMPRESSION","JSON","parse","push","Npm","require","configure","threshold","level","constants","Z_BEST_SPEED","memLevel","Z_MIN_MEMLEVEL","noContextTakeover","maxWindowBits","Z_MIN_WINDOWBITS","pathPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","StreamServer","self","registration_callbacks","open_sockets","prefix","RoutePolicy","declare","sockjs","serverOptions","log","heartbeat_delay","disconnect_delay","disable_cors","DISABLE_SOCKJS_CORS","jsessionid","USE_JSESSIONID","DISABLE_WEBSOCKETS","websocket","faye_server_options","server","createServer","WebApp","httpServer","removeListener","_timeoutAdjustmentRequestCallback","installHandlers","addListener","_redirectWebsocketEndpoint","on","socket","setWebsocketTimeout","timeout","protocol","_session","recv","connection","setTimeout","send","data","write","filter","value","TEST_METADATA","stringify","testMessageOnConnect","forEach","callback","Object","assign","prototype","register","all_sockets","values","event","oldHttpServerListeners","listeners","slice","removeAllListeners","newListener","request","args","arguments","url","parsedUrl","pathname","format","oldListener","apply","__reify_async_result__","_reifyError","async"],"sources":["packages/ddp-server/stream_server.js"],"sourcesContent":["import once from 'lodash.once';\nimport zlib from 'node:zlib';\n\n// By default, we use the permessage-deflate extension with default\n// configuration. If $SERVER_WEBSOCKET_COMPRESSION is set, then it must be valid\n// JSON. If it represents a falsey value, then we do not use permessage-deflate\n// at all; otherwise, the JSON value is used as an argument to deflate's\n// configure method; see\n// https://github.com/faye/permessage-deflate-node/blob/master/README.md\n//\n// (We do this in an _.once instead of at startup, because we don't want to\n// crash the tool during isopacket load if your JSON doesn't parse. This is only\n// a problem because the tool has to load the DDP server code just in order to\n// be a DDP client; see https://github.com/meteor/meteor/issues/3452 .)\nvar websocketExtensions = once(function () {\n  var extensions = [];\n\n  var websocketCompressionConfig = process.env.SERVER_WEBSOCKET_COMPRESSION ?\n    JSON.parse(process.env.SERVER_WEBSOCKET_COMPRESSION) : {};\n\n  if (websocketCompressionConfig) {\n    extensions.push(Npm.require('permessage-deflate2').configure({\n      threshold: 1024,\n      level: zlib.constants.Z_BEST_SPEED,\n      memLevel: zlib.constants.Z_MIN_MEMLEVEL,\n      noContextTakeover: true,\n      maxWindowBits: zlib.constants.Z_MIN_WINDOWBITS,\n      ...(websocketCompressionConfig || {})\n    }));\n  }\n\n  return extensions;\n});\n\nvar pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX ||  \"\";\n\nStreamServer = function () {\n  var self = this;\n  self.registration_callbacks = [];\n  self.open_sockets = [];\n\n  // Because we are installing directly onto WebApp.httpServer instead of using\n  // WebApp.app, we have to process the path prefix ourselves.\n  self.prefix = pathPrefix + '/sockjs';\n  RoutePolicy.declare(self.prefix + '/', 'network');\n\n  // set up sockjs\n  var sockjs = Npm.require('sockjs');\n  var serverOptions = {\n    prefix: self.prefix,\n    log: function() {},\n    // this is the default, but we code it explicitly because we depend\n    // on it in stream_client:HEARTBEAT_TIMEOUT\n    heartbeat_delay: 45000,\n    // The default disconnect_delay is 5 seconds, but if the server ends up CPU\n    // bound for that much time, SockJS might not notice that the user has\n    // reconnected because the timer (of disconnect_delay ms) can fire before\n    // SockJS processes the new connection. Eventually we'll fix this by not\n    // combining CPU-heavy processing with SockJS termination (eg a proxy which\n    // converts to Unix sockets) but for now, raise the delay.\n    disconnect_delay: 60 * 1000,\n    // Allow disabling of CORS requests to address\n    // https://github.com/meteor/meteor/issues/8317.\n    disable_cors: !!process.env.DISABLE_SOCKJS_CORS,\n    // Set the USE_JSESSIONID environment variable to enable setting the\n    // JSESSIONID cookie. This is useful for setting up proxies with\n    // session affinity.\n    jsessionid: !!process.env.USE_JSESSIONID\n  };\n\n  // If you know your server environment (eg, proxies) will prevent websockets\n  // from ever working, set $DISABLE_WEBSOCKETS and SockJS clients (ie,\n  // browsers) will not waste time attempting to use them.\n  // (Your server will still have a /websocket endpoint.)\n  if (process.env.DISABLE_WEBSOCKETS) {\n    serverOptions.websocket = false;\n  } else {\n    serverOptions.faye_server_options = {\n      extensions: websocketExtensions()\n    };\n  }\n\n  self.server = sockjs.createServer(serverOptions);\n\n  // Install the sockjs handlers, but we want to keep around our own particular\n  // request handler that adjusts idle timeouts while we have an outstanding\n  // request.  This compensates for the fact that sockjs removes all listeners\n  // for \"request\" to add its own.\n  WebApp.httpServer.removeListener(\n    'request', WebApp._timeoutAdjustmentRequestCallback);\n  self.server.installHandlers(WebApp.httpServer);\n  WebApp.httpServer.addListener(\n    'request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // Support the /websocket endpoint\n  self._redirectWebsocketEndpoint();\n\n  self.server.on('connection', function (socket) {\n    // sockjs sometimes passes us null instead of a socket object\n    // so we need to guard against that. see:\n    // https://github.com/sockjs/sockjs-node/issues/121\n    // https://github.com/meteor/meteor/issues/10468\n    if (!socket) return;\n\n    // We want to make sure that if a client connects to us and does the initial\n    // Websocket handshake but never gets to the DDP handshake, that we\n    // eventually kill the socket.  Once the DDP handshake happens, DDP\n    // heartbeating will work. And before the Websocket handshake, the timeouts\n    // we set at the server level in webapp_server.js will work. But\n    // faye-websocket calls setTimeout(0) on any socket it takes over, so there\n    // is an \"in between\" state where this doesn't happen.  We work around this\n    // by explicitly setting the socket timeout to a relatively large time here,\n    // and setting it back to zero when we set up the heartbeat in\n    // livedata_server.js.\n    socket.setWebsocketTimeout = function (timeout) {\n      if ((socket.protocol === 'websocket' ||\n           socket.protocol === 'websocket-raw')\n          && socket._session.recv) {\n        socket._session.recv.connection.setTimeout(timeout);\n      }\n    };\n    socket.setWebsocketTimeout(45 * 1000);\n\n    socket.send = function (data) {\n      socket.write(data);\n    };\n    socket.on('close', function () {\n      self.open_sockets = self.open_sockets.filter(function(value) {\n        return value !== socket;\n      });\n    });\n    self.open_sockets.push(socket);\n\n    // only to send a message after connection on tests, useful for\n    // socket-stream-client/server-tests.js\n    if (process.env.TEST_METADATA && process.env.TEST_METADATA !== \"{}\") {\n      socket.send(JSON.stringify({ testMessageOnConnect: true }));\n    }\n\n    // call all our callbacks when we get a new socket. they will do the\n    // work of setting up handlers and such for specific messages.\n    self.registration_callbacks.forEach(function (callback) {\n      callback(socket);\n    });\n  });\n\n};\n\nObject.assign(StreamServer.prototype, {\n  // call my callback when a new socket connects.\n  // also call it for all current connections.\n  register: function (callback) {\n    var self = this;\n    self.registration_callbacks.push(callback);\n    self.all_sockets().forEach(function (socket) {\n      callback(socket);\n    });\n  },\n\n  // get a list of all sockets\n  all_sockets: function () {\n    var self = this;\n    return Object.values(self.open_sockets);\n  },\n\n  // Redirect /websocket to /sockjs/websocket in order to not expose\n  // sockjs to clients that want to use raw websockets\n  _redirectWebsocketEndpoint: function() {\n    var self = this;\n    // Unfortunately we can't use a connect middleware here since\n    // sockjs installs itself prior to all existing listeners\n    // (meaning prior to any connect middlewares) so we need to take\n    // an approach similar to overshadowListeners in\n    // https://github.com/sockjs/sockjs-node/blob/cf820c55af6a9953e16558555a31decea554f70e/src/utils.coffee\n    ['request', 'upgrade'].forEach((event) => {\n      var httpServer = WebApp.httpServer;\n      var oldHttpServerListeners = httpServer.listeners(event).slice(0);\n      httpServer.removeAllListeners(event);\n\n      // request and upgrade have different arguments passed but\n      // we only care about the first one which is always request\n      var newListener = function(request /*, moreArguments */) {\n        // Store arguments for use within the closure below\n        var args = arguments;\n\n        // TODO replace with url package\n        var url = Npm.require('url');\n\n        // Rewrite /websocket and /websocket/ urls to /sockjs/websocket while\n        // preserving query string.\n        var parsedUrl = url.parse(request.url);\n        if (parsedUrl.pathname === pathPrefix + '/websocket' ||\n            parsedUrl.pathname === pathPrefix + '/websocket/') {\n          parsedUrl.pathname = self.prefix + '/websocket';\n          request.url = url.format(parsedUrl);\n        }\n        oldHttpServerListeners.forEach(function(oldListener) {\n          oldListener.apply(httpServer, args);\n        });\n      };\n      httpServer.addListener(event, newListener);\n    });\n  }\n});"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c24c4eef6af507c783b18613ad2eaa77d23b1dc9"}
