{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\asynchronous_cursor.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/mongo/asynchronous_cursor.js","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\asynchronous_cursor.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\asynchronous_cursor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/asynchronous_cursor.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AsynchronousCursor: () => AsynchronousCursor\n    });\n    let LocalCollection;\n    module.link(\"meteor/minimongo/local_collection\", {\n      default(v) {\n        LocalCollection = v;\n      }\n    }, 0);\n    let replaceMongoAtomWithMeteor, replaceTypes;\n    module.link(\"./mongo_common\", {\n      replaceMongoAtomWithMeteor(v) {\n        replaceMongoAtomWithMeteor = v;\n      },\n      replaceTypes(v) {\n        replaceTypes = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AsynchronousCursor {\n      constructor(dbCursor, cursorDescription, options) {\n        this._dbCursor = dbCursor;\n        this._cursorDescription = cursorDescription;\n        this._selfForIteration = options.selfForIteration || this;\n        if (options.useTransform && cursorDescription.options.transform) {\n          this._transform = LocalCollection.wrapTransform(cursorDescription.options.transform);\n        } else {\n          this._transform = null;\n        }\n        this._visitedIds = new LocalCollection._IdMap();\n      }\n      [Symbol.asyncIterator]() {\n        var cursor = this;\n        return {\n          async next() {\n            const value = await cursor._nextObjectPromise();\n            return {\n              done: !value,\n              value\n            };\n          }\n        };\n      }\n\n      // Returns a Promise for the next object from the underlying cursor (before\n      // the Mongo->Meteor type replacement).\n      async _rawNextObjectPromise() {\n        try {\n          return this._dbCursor.next();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Returns a Promise for the next object from the cursor, skipping those whose\n      // IDs we've already seen and replacing Mongo atoms with Meteor atoms.\n      async _nextObjectPromise() {\n        while (true) {\n          var doc = await this._rawNextObjectPromise();\n          if (!doc) return null;\n          doc = replaceTypes(doc, replaceMongoAtomWithMeteor);\n          if (!this._cursorDescription.options.tailable && '_id' in doc) {\n            // Did Mongo give us duplicate documents in the same cursor? If so,\n            // ignore this one. (Do this before the transform, since transform might\n            // return some unrelated value.) We don't do this for tailable cursors,\n            // because we want to maintain O(1) memory usage. And if there isn't _id\n            // for some reason (maybe it's the oplog), then we don't do this either.\n            // (Be careful to do this for falsey but existing _id, though.)\n            if (this._visitedIds.has(doc._id)) continue;\n            this._visitedIds.set(doc._id, true);\n          }\n          if (this._transform) doc = this._transform(doc);\n          return doc;\n        }\n      }\n\n      // Returns a promise which is resolved with the next object (like with\n      // _nextObjectPromise) or rejected if the cursor doesn't return within\n      // timeoutMS ms.\n      _nextObjectPromiseWithTimeout(timeoutMS) {\n        if (!timeoutMS) {\n          return this._nextObjectPromise();\n        }\n        const nextObjectPromise = this._nextObjectPromise();\n        const timeoutErr = new Error('Client-side timeout waiting for next object');\n        const timeoutPromise = new Promise((resolve, reject) => {\n          setTimeout(() => {\n            reject(timeoutErr);\n          }, timeoutMS);\n        });\n        return Promise.race([nextObjectPromise, timeoutPromise]).catch(err => {\n          if (err === timeoutErr) {\n            this.close();\n            return;\n          }\n          throw err;\n        });\n      }\n      async forEach(callback, thisArg) {\n        // Get back to the beginning.\n        this._rewind();\n        let idx = 0;\n        while (true) {\n          const doc = await this._nextObjectPromise();\n          if (!doc) return;\n          await callback.call(thisArg, doc, idx++, this._selfForIteration);\n        }\n      }\n      async map(callback, thisArg) {\n        const results = [];\n        await this.forEach(async (doc, index) => {\n          results.push(await callback.call(thisArg, doc, index, this._selfForIteration));\n        });\n        return results;\n      }\n      _rewind() {\n        // known to be synchronous\n        this._dbCursor.rewind();\n        this._visitedIds = new LocalCollection._IdMap();\n      }\n\n      // Mostly usable for tailable cursors.\n      close() {\n        this._dbCursor.close();\n      }\n      fetch() {\n        return this.map(doc => doc);\n      }\n\n      /**\n       * FIXME: (node:34680) [MONGODB DRIVER] Warning: cursor.count is deprecated and will be\n       *  removed in the next major version, please use `collection.estimatedDocumentCount` or\n       *  `collection.countDocuments` instead.\n       */\n      count() {\n        return this._dbCursor.count();\n      }\n\n      // This method is NOT wrapped in Cursor.\n      async getRawObjects(ordered) {\n        var self = this;\n        if (ordered) {\n          return self.fetch();\n        } else {\n          var results = new LocalCollection._IdMap();\n          await self.forEach(function (doc) {\n            results.set(doc._id, doc);\n          });\n          return results;\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AsynchronousCursor","LocalCollection","link","default","v","replaceMongoAtomWithMeteor","replaceTypes","__reifyWaitForDeps__","constructor","dbCursor","cursorDescription","options","_dbCursor","_cursorDescription","_selfForIteration","selfForIteration","useTransform","transform","_transform","wrapTransform","_visitedIds","_IdMap","Symbol","asyncIterator","cursor","next","value","_nextObjectPromise","done","_rawNextObjectPromise","e","console","error","doc","tailable","has","_id","set","_nextObjectPromiseWithTimeout","timeoutMS","nextObjectPromise","timeoutErr","Error","timeoutPromise","Promise","resolve","reject","setTimeout","race","catch","err","close","forEach","callback","thisArg","_rewind","idx","call","map","results","index","push","rewind","fetch","count","getRawObjects","ordered","self","__reify_async_result__","_reifyError","async"],"sources":["packages/mongo/asynchronous_cursor.js"],"sourcesContent":["import LocalCollection from 'meteor/minimongo/local_collection';\nimport { replaceMongoAtomWithMeteor, replaceTypes } from './mongo_common';\n\n/**\n * This is just a light wrapper for the cursor. The goal here is to ensure compatibility even if\n * there are breaking changes on the MongoDB driver.\n *\n * This is an internal implementation detail and is created lazily by the main Cursor class.\n */\nexport class AsynchronousCursor {\n  constructor(dbCursor, cursorDescription, options) {\n    this._dbCursor = dbCursor;\n    this._cursorDescription = cursorDescription;\n\n    this._selfForIteration = options.selfForIteration || this;\n    if (options.useTransform && cursorDescription.options.transform) {\n      this._transform = LocalCollection.wrapTransform(\n        cursorDescription.options.transform);\n    } else {\n      this._transform = null;\n    }\n\n    this._visitedIds = new LocalCollection._IdMap;\n  }\n\n  [Symbol.asyncIterator]() {\n    var cursor = this;\n    return {\n      async next() {\n        const value = await cursor._nextObjectPromise();\n        return { done: !value, value };\n      },\n    };\n  }\n\n  // Returns a Promise for the next object from the underlying cursor (before\n  // the Mongo->Meteor type replacement).\n  async _rawNextObjectPromise() {\n    try {\n      return this._dbCursor.next();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Returns a Promise for the next object from the cursor, skipping those whose\n  // IDs we've already seen and replacing Mongo atoms with Meteor atoms.\n  async _nextObjectPromise () {\n    while (true) {\n      var doc = await this._rawNextObjectPromise();\n\n      if (!doc) return null;\n      doc = replaceTypes(doc, replaceMongoAtomWithMeteor);\n\n      if (!this._cursorDescription.options.tailable && '_id' in doc) {\n        // Did Mongo give us duplicate documents in the same cursor? If so,\n        // ignore this one. (Do this before the transform, since transform might\n        // return some unrelated value.) We don't do this for tailable cursors,\n        // because we want to maintain O(1) memory usage. And if there isn't _id\n        // for some reason (maybe it's the oplog), then we don't do this either.\n        // (Be careful to do this for falsey but existing _id, though.)\n        if (this._visitedIds.has(doc._id)) continue;\n        this._visitedIds.set(doc._id, true);\n      }\n\n      if (this._transform)\n        doc = this._transform(doc);\n\n      return doc;\n    }\n  }\n\n  // Returns a promise which is resolved with the next object (like with\n  // _nextObjectPromise) or rejected if the cursor doesn't return within\n  // timeoutMS ms.\n  _nextObjectPromiseWithTimeout(timeoutMS) {\n    if (!timeoutMS) {\n      return this._nextObjectPromise();\n    }\n    const nextObjectPromise = this._nextObjectPromise();\n    const timeoutErr = new Error('Client-side timeout waiting for next object');\n    const timeoutPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(timeoutErr);\n      }, timeoutMS);\n    });\n    return Promise.race([nextObjectPromise, timeoutPromise])\n      .catch((err) => {\n        if (err === timeoutErr) {\n          this.close();\n          return;\n        }\n        throw err;\n      });\n  }\n\n  async forEach(callback, thisArg) {\n    // Get back to the beginning.\n    this._rewind();\n\n    let idx = 0;\n    while (true) {\n      const doc = await this._nextObjectPromise();\n      if (!doc) return;\n      await callback.call(thisArg, doc, idx++, this._selfForIteration);\n    }\n  }\n\n  async map(callback, thisArg) {\n    const results = [];\n    await this.forEach(async (doc, index) => {\n      results.push(await callback.call(thisArg, doc, index, this._selfForIteration));\n    });\n\n    return results;\n  }\n\n  _rewind() {\n    // known to be synchronous\n    this._dbCursor.rewind();\n\n    this._visitedIds = new LocalCollection._IdMap;\n  }\n\n  // Mostly usable for tailable cursors.\n  close() {\n    this._dbCursor.close();\n  }\n\n  fetch() {\n    return this.map(doc => doc);\n  }\n\n  /**\n   * FIXME: (node:34680) [MONGODB DRIVER] Warning: cursor.count is deprecated and will be\n   *  removed in the next major version, please use `collection.estimatedDocumentCount` or\n   *  `collection.countDocuments` instead.\n   */\n  count() {\n    return this._dbCursor.count();\n  }\n\n  // This method is NOT wrapped in Cursor.\n  async getRawObjects(ordered) {\n    var self = this;\n    if (ordered) {\n      return self.fetch();\n    } else {\n      var results = new LocalCollection._IdMap;\n      await self.forEach(function (doc) {\n        results.set(doc._id, doc);\n      });\n      return results;\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"60deb5198c76a6c4135a568a210721277b644e31"}
