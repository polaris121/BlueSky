{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\collection\\collection.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/mongo/collection/collection.js","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\collection\\collection.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\collection\\collection.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/collection/collection.js"}},"code":"!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let normalizeProjection;\n    module1.link(\"../mongo_utils\", {\n      normalizeProjection(v) {\n        normalizeProjection = v;\n      }\n    }, 0);\n    let AsyncMethods;\n    module1.link(\"./methods_async\", {\n      AsyncMethods(v) {\n        AsyncMethods = v;\n      }\n    }, 1);\n    let SyncMethods;\n    module1.link(\"./methods_sync\", {\n      SyncMethods(v) {\n        SyncMethods = v;\n      }\n    }, 2);\n    let IndexMethods;\n    module1.link(\"./methods_index\", {\n      IndexMethods(v) {\n        IndexMethods = v;\n      }\n    }, 3);\n    let ID_GENERATORS, normalizeOptions, setupAutopublish, setupConnection, setupDriver, setupMutationMethods, validateCollectionName;\n    module1.link(\"./collection_utils\", {\n      ID_GENERATORS(v) {\n        ID_GENERATORS = v;\n      },\n      normalizeOptions(v) {\n        normalizeOptions = v;\n      },\n      setupAutopublish(v) {\n        setupAutopublish = v;\n      },\n      setupConnection(v) {\n        setupConnection = v;\n      },\n      setupDriver(v) {\n        setupDriver = v;\n      },\n      setupMutationMethods(v) {\n        setupMutationMethods = v;\n      },\n      validateCollectionName(v) {\n        validateCollectionName = v;\n      }\n    }, 4);\n    let ReplicationMethods;\n    module1.link(\"./methods_replication\", {\n      ReplicationMethods(v) {\n        ReplicationMethods = v;\n      }\n    }, 5);\n    let watchChangeStream;\n    module1.link(\"./watch_change_stream\", {\n      watchChangeStream(v) {\n        watchChangeStream = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /**\n     * @summary Namespace for MongoDB-related items\n     * @namespace\n     */\n    Mongo = {};\n\n    /**\n     * @summary Constructor for a Collection\n     * @locus Anywhere\n     * @instancename collection\n     * @class\n     * @param {String} name The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.\n     * @param {Object} [options]\n     * @param {Object} options.connection The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling [`DDP.connect`](#DDP-connect) to specify a different server. Pass `null` to specify no connection. Unmanaged (`name` is null) collections cannot specify a connection.\n     * @param {String} options.idGeneration The method of generating the `_id` fields of new documents in this collection.  Possible values:\n    \n     - **`'STRING'`**: random strings\n     - **`'MONGO'`**:  random [`Mongo.ObjectID`](#mongo_object_id) values\n    \n    The default id generation technique is `'STRING'`.\n     * @param {Function} options.transform An optional transformation function. Documents will be passed through this function before being returned from `fetch` or `findOneAsync`, and before being passed to callbacks of `observe`, `map`, `forEach`, `allow`, and `deny`. Transforms are *not* applied for the callbacks of `observeChanges` or to cursors returned from publish functions.\n     * @param {Boolean} options.defineMutationMethods Set to `false` to skip setting up the mutation methods that enable insert/update/remove from client code. Default `true`.\n     */\n    // Main Collection constructor\n    Mongo.Collection = function Collection(name, options) {\n      var _ID_GENERATORS$option, _ID_GENERATORS;\n      name = validateCollectionName(name);\n      options = normalizeOptions(options);\n      this._makeNewID = (_ID_GENERATORS$option = (_ID_GENERATORS = ID_GENERATORS)[options.idGeneration]) === null || _ID_GENERATORS$option === void 0 ? void 0 : _ID_GENERATORS$option.call(_ID_GENERATORS, name);\n      this._transform = LocalCollection.wrapTransform(options.transform);\n      this.resolverType = options.resolverType;\n      this._connection = setupConnection(name, options);\n      const driver = setupDriver(name, this._connection, options);\n      this._driver = driver;\n      this._collection = driver.open(name, this._connection);\n      this._name = name;\n      this._settingUpReplicationPromise = this._maybeSetUpReplication(name, options);\n      setupMutationMethods(this, name, options);\n      setupAutopublish(this, name, options);\n      Mongo._collections.set(name, this);\n    };\n    Object.assign(Mongo.Collection.prototype, {\n      _getFindSelector(args) {\n        if (args.length == 0) return {};else return args[0];\n      },\n      _getFindOptions(args) {\n        const [, options] = args || [];\n        const newOptions = normalizeProjection(options);\n        var self = this;\n        if (args.length < 2) {\n          return {\n            transform: self._transform\n          };\n        } else {\n          check(newOptions, Match.Optional(Match.ObjectIncluding({\n            projection: Match.Optional(Match.OneOf(Object, undefined)),\n            sort: Match.Optional(Match.OneOf(Object, Array, Function, undefined)),\n            limit: Match.Optional(Match.OneOf(Number, undefined)),\n            skip: Match.Optional(Match.OneOf(Number, undefined))\n          })));\n          return _objectSpread({\n            transform: self._transform\n          }, newOptions);\n        }\n      }\n    });\n    Object.assign(Mongo.Collection, {\n      async _publishCursor(cursor, sub, collection) {\n        var observeHandle = await cursor.observeChanges({\n          added: function (id, fields) {\n            sub.added(collection, id, fields);\n          },\n          changed: function (id, fields) {\n            sub.changed(collection, id, fields);\n          },\n          removed: function (id) {\n            sub.removed(collection, id);\n          }\n        },\n        // Publications don't mutate the documents\n        // This is tested by the `livedata - publish callbacks clone` test\n        {\n          nonMutatingCallbacks: true\n        });\n\n        // We don't call sub.ready() here: it gets called in livedata_server, after\n        // possibly calling _publishCursor on multiple returned cursors.\n\n        // register stop callback (expects lambda w/ no args).\n        sub.onStop(async function () {\n          return await observeHandle.stop();\n        });\n\n        // return the observeHandle in case it needs to be stopped early\n        return observeHandle;\n      },\n      // protect against dangerous selectors.  falsey and {_id: falsey} are both\n      // likely programmer error, and not what you want, particularly for destructive\n      // operations. If a falsey _id is sent in, a new string _id will be\n      // generated and returned; if a fallbackId is provided, it will be returned\n      // instead.\n      _rewriteSelector(selector) {\n        let {\n          fallbackId\n        } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        // shorthand -- scalars match _id\n        if (LocalCollection._selectorIsId(selector)) selector = {\n          _id: selector\n        };\n        if (Array.isArray(selector)) {\n          // This is consistent with the Mongo console itself; if we don't do this\n          // check passing an empty array ends up selecting all items\n          throw new Error(\"Mongo selector can't be an array.\");\n        }\n        if (!selector || '_id' in selector && !selector._id) {\n          // can't match anything\n          return {\n            _id: fallbackId || Random.id()\n          };\n        }\n        return selector;\n      }\n    });\n    Object.assign(Mongo.Collection.prototype, ReplicationMethods, SyncMethods, AsyncMethods, IndexMethods);\n    Object.assign(Mongo.Collection.prototype, {\n      // Determine if this collection is simply a minimongo representation of a real\n      // database on another server\n      _isRemoteCollection() {\n        // XXX see #MeteorServerNull\n        return this._connection && this._connection !== Meteor.server;\n      },\n      async dropCollectionAsync() {\n        var self = this;\n        if (!self._collection.dropCollectionAsync) throw new Error('Can only call dropCollectionAsync on server collections');\n        await self._collection.dropCollectionAsync();\n      },\n      async createCappedCollectionAsync(byteSize, maxDocuments) {\n        var self = this;\n        if (!(await self._collection.createCappedCollectionAsync)) throw new Error('Can only call createCappedCollectionAsync on server collections');\n        await self._collection.createCappedCollectionAsync(byteSize, maxDocuments);\n      },\n      /**\n       * @summary Returns the [`Collection`](http://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html) object corresponding to this collection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n       * @locus Server\n       * @memberof Mongo.Collection\n       * @instance\n       */\n      rawCollection() {\n        var self = this;\n        if (!self._collection.rawCollection) {\n          throw new Error('Can only call rawCollection on server collections');\n        }\n        return self._collection.rawCollection();\n      },\n      /**\n       * @summary Returns the [`Db`](http://mongodb.github.io/node-mongodb-native/3.0/api/Db.html) object corresponding to this collection's database connection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n       * @locus Server\n       * @memberof Mongo.Collection\n       * @instance\n       */\n      rawDatabase() {\n        var self = this;\n        if (!(self._driver.mongo && self._driver.mongo.db)) {\n          throw new Error('Can only call rawDatabase on server collections');\n        }\n        return self._driver.mongo.db;\n      }\n    });\n    Object.assign(Mongo, {\n      /**\n       * @summary Retrieve a Meteor collection instance by name. Only collections defined with [`new Mongo.Collection(...)`](#collections) are available with this method. For plain MongoDB collections, you'll want to look at [`rawDatabase()`](#Mongo-Collection-rawDatabase).\n       * @locus Anywhere\n       * @memberof Mongo\n       * @static\n       * @param {string} name Name of your collection as it was defined with `new Mongo.Collection()`.\n       * @returns {Mongo.Collection | undefined}\n       */\n      getCollection(name) {\n        return this._collections.get(name);\n      },\n      /**\n       * @summary A record of all defined Mongo.Collection instances, indexed by collection name.\n       * @type {Map<string, Mongo.Collection>}\n       * @memberof Mongo\n       * @protected\n       */\n      _collections: new Map()\n    });\n\n    /**\n     * @summary Create a Mongo-style `ObjectID`.  If you don't specify a `hexString`, the `ObjectID` will be generated randomly (not using MongoDB's ID construction rules).\n     * @locus Anywhere\n     * @class\n     * @param {String} [hexString] Optional.  The 24-character hexadecimal contents of the ObjectID to create\n     */\n    Mongo.ObjectID = MongoID.ObjectID;\n\n    /**\n     * @summary To create a cursor, use find. To access the documents in a cursor, use forEach, map, or fetch.\n     * @class\n     * @instanceName cursor\n     */\n    Mongo.Cursor = LocalCollection.Cursor;\n\n    /**\n     * @deprecated in 0.9.1\n     */\n    Mongo.Collection.Cursor = Mongo.Cursor;\n\n    /**\n     * @deprecated in 0.9.1\n     */\n    Mongo.Collection.ObjectID = Mongo.ObjectID;\n\n    /**\n     * @deprecated in 0.9.1\n     */\n    Meteor.Collection = Mongo.Collection;\n\n    // Allow deny stuff is now in the allow-deny package\n    Object.assign(Mongo.Collection.prototype, AllowDeny.CollectionPrototype);\n\n    // Só agora que Mongo.Collection existe, adicionamos o método ao prototype\n    Object.assign(Mongo.Collection.prototype, {\n      watchChangeStream\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module1","link","default","v","normalizeProjection","AsyncMethods","SyncMethods","IndexMethods","ID_GENERATORS","normalizeOptions","setupAutopublish","setupConnection","setupDriver","setupMutationMethods","validateCollectionName","ReplicationMethods","watchChangeStream","__reifyWaitForDeps__","Mongo","Collection","name","options","_ID_GENERATORS$option","_ID_GENERATORS","_makeNewID","idGeneration","call","_transform","LocalCollection","wrapTransform","transform","resolverType","_connection","driver","_driver","_collection","open","_name","_settingUpReplicationPromise","_maybeSetUpReplication","_collections","set","Object","assign","prototype","_getFindSelector","args","length","_getFindOptions","newOptions","self","check","Match","Optional","ObjectIncluding","projection","OneOf","undefined","sort","Array","Function","limit","Number","skip","_publishCursor","cursor","sub","collection","observeHandle","observeChanges","added","id","fields","changed","removed","nonMutatingCallbacks","onStop","stop","_rewriteSelector","selector","fallbackId","arguments","_selectorIsId","_id","isArray","Error","Random","_isRemoteCollection","Meteor","server","dropCollectionAsync","createCappedCollectionAsync","byteSize","maxDocuments","rawCollection","rawDatabase","mongo","db","getCollection","get","Map","ObjectID","MongoID","Cursor","AllowDeny","CollectionPrototype","__reify_async_result__","_reifyError","async"],"sources":["packages/mongo/collection/collection.js"],"sourcesContent":["import { normalizeProjection } from \"../mongo_utils\";\nimport { AsyncMethods } from './methods_async';\nimport { SyncMethods } from './methods_sync';\nimport { IndexMethods } from './methods_index';\nimport {\n  ID_GENERATORS, normalizeOptions,\n  setupAutopublish,\n  setupConnection,\n  setupDriver,\n  setupMutationMethods,\n  validateCollectionName\n} from './collection_utils';\nimport { ReplicationMethods } from './methods_replication';\nimport { watchChangeStream } from './watch_change_stream';\n\n/**\n * @summary Namespace for MongoDB-related items\n * @namespace\n */\nMongo = {};\n\n/**\n * @summary Constructor for a Collection\n * @locus Anywhere\n * @instancename collection\n * @class\n * @param {String} name The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.\n * @param {Object} [options]\n * @param {Object} options.connection The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling [`DDP.connect`](#DDP-connect) to specify a different server. Pass `null` to specify no connection. Unmanaged (`name` is null) collections cannot specify a connection.\n * @param {String} options.idGeneration The method of generating the `_id` fields of new documents in this collection.  Possible values:\n\n - **`'STRING'`**: random strings\n - **`'MONGO'`**:  random [`Mongo.ObjectID`](#mongo_object_id) values\n\nThe default id generation technique is `'STRING'`.\n * @param {Function} options.transform An optional transformation function. Documents will be passed through this function before being returned from `fetch` or `findOneAsync`, and before being passed to callbacks of `observe`, `map`, `forEach`, `allow`, and `deny`. Transforms are *not* applied for the callbacks of `observeChanges` or to cursors returned from publish functions.\n * @param {Boolean} options.defineMutationMethods Set to `false` to skip setting up the mutation methods that enable insert/update/remove from client code. Default `true`.\n */\n// Main Collection constructor\nMongo.Collection = function Collection(name, options) {\n  name = validateCollectionName(name);\n\n  options = normalizeOptions(options);\n\n  this._makeNewID = ID_GENERATORS[options.idGeneration]?.(name);\n\n  this._transform = LocalCollection.wrapTransform(options.transform);\n  this.resolverType = options.resolverType;\n\n  this._connection = setupConnection(name, options);\n\n  const driver = setupDriver(name, this._connection, options);\n  this._driver = driver;\n\n  this._collection = driver.open(name, this._connection);\n  this._name = name;\n\n  this._settingUpReplicationPromise = this._maybeSetUpReplication(name, options);\n\n  setupMutationMethods(this, name, options);\n\n  setupAutopublish(this, name, options);\n\n  Mongo._collections.set(name, this);\n};\n\nObject.assign(Mongo.Collection.prototype, {\n  _getFindSelector(args) {\n    if (args.length == 0) return {};\n    else return args[0];\n  },\n\n  _getFindOptions(args) {\n    const [, options] = args || [];\n    const newOptions = normalizeProjection(options);\n\n    var self = this;\n    if (args.length < 2) {\n      return { transform: self._transform };\n    } else {\n      check(\n        newOptions,\n        Match.Optional(\n          Match.ObjectIncluding({\n            projection: Match.Optional(Match.OneOf(Object, undefined)),\n            sort: Match.Optional(\n              Match.OneOf(Object, Array, Function, undefined)\n            ),\n            limit: Match.Optional(Match.OneOf(Number, undefined)),\n            skip: Match.Optional(Match.OneOf(Number, undefined)),\n          })\n        )\n      );\n\n      return {\n        transform: self._transform,\n        ...newOptions,\n      };\n    }\n  },\n});\n\nObject.assign(Mongo.Collection, {\n  async _publishCursor(cursor, sub, collection) {\n    var observeHandle = await cursor.observeChanges(\n        {\n          added: function(id, fields) {\n            sub.added(collection, id, fields);\n          },\n          changed: function(id, fields) {\n            sub.changed(collection, id, fields);\n          },\n          removed: function(id) {\n            sub.removed(collection, id);\n          },\n        },\n        // Publications don't mutate the documents\n        // This is tested by the `livedata - publish callbacks clone` test\n        { nonMutatingCallbacks: true }\n    );\n\n    // We don't call sub.ready() here: it gets called in livedata_server, after\n    // possibly calling _publishCursor on multiple returned cursors.\n\n    // register stop callback (expects lambda w/ no args).\n    sub.onStop(async function() {\n      return await observeHandle.stop();\n    });\n\n    // return the observeHandle in case it needs to be stopped early\n    return observeHandle;\n  },\n\n  // protect against dangerous selectors.  falsey and {_id: falsey} are both\n  // likely programmer error, and not what you want, particularly for destructive\n  // operations. If a falsey _id is sent in, a new string _id will be\n  // generated and returned; if a fallbackId is provided, it will be returned\n  // instead.\n  _rewriteSelector(selector, { fallbackId } = {}) {\n    // shorthand -- scalars match _id\n    if (LocalCollection._selectorIsId(selector)) selector = { _id: selector };\n\n    if (Array.isArray(selector)) {\n      // This is consistent with the Mongo console itself; if we don't do this\n      // check passing an empty array ends up selecting all items\n      throw new Error(\"Mongo selector can't be an array.\");\n    }\n\n    if (!selector || ('_id' in selector && !selector._id)) {\n      // can't match anything\n      return { _id: fallbackId || Random.id() };\n    }\n\n    return selector;\n  },\n});\n\nObject.assign(Mongo.Collection.prototype, ReplicationMethods, SyncMethods, AsyncMethods, IndexMethods);\n\nObject.assign(Mongo.Collection.prototype, {\n  // Determine if this collection is simply a minimongo representation of a real\n  // database on another server\n  _isRemoteCollection() {\n    // XXX see #MeteorServerNull\n    return this._connection && this._connection !== Meteor.server;\n  },\n\n  async dropCollectionAsync() {\n    var self = this;\n    if (!self._collection.dropCollectionAsync)\n      throw new Error('Can only call dropCollectionAsync on server collections');\n   await self._collection.dropCollectionAsync();\n  },\n\n  async createCappedCollectionAsync(byteSize, maxDocuments) {\n    var self = this;\n    if (! await self._collection.createCappedCollectionAsync)\n      throw new Error(\n        'Can only call createCappedCollectionAsync on server collections'\n      );\n    await self._collection.createCappedCollectionAsync(byteSize, maxDocuments);\n  },\n\n  /**\n   * @summary Returns the [`Collection`](http://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html) object corresponding to this collection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n   * @locus Server\n   * @memberof Mongo.Collection\n   * @instance\n   */\n  rawCollection() {\n    var self = this;\n    if (!self._collection.rawCollection) {\n      throw new Error('Can only call rawCollection on server collections');\n    }\n    return self._collection.rawCollection();\n  },\n\n  /**\n   * @summary Returns the [`Db`](http://mongodb.github.io/node-mongodb-native/3.0/api/Db.html) object corresponding to this collection's database connection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n   * @locus Server\n   * @memberof Mongo.Collection\n   * @instance\n   */\n  rawDatabase() {\n    var self = this;\n    if (!(self._driver.mongo && self._driver.mongo.db)) {\n      throw new Error('Can only call rawDatabase on server collections');\n    }\n    return self._driver.mongo.db;\n  },\n});\n\nObject.assign(Mongo, {\n  /**\n   * @summary Retrieve a Meteor collection instance by name. Only collections defined with [`new Mongo.Collection(...)`](#collections) are available with this method. For plain MongoDB collections, you'll want to look at [`rawDatabase()`](#Mongo-Collection-rawDatabase).\n   * @locus Anywhere\n   * @memberof Mongo\n   * @static\n   * @param {string} name Name of your collection as it was defined with `new Mongo.Collection()`.\n   * @returns {Mongo.Collection | undefined}\n   */\n  getCollection(name) {\n    return this._collections.get(name);\n  },\n\n  /**\n   * @summary A record of all defined Mongo.Collection instances, indexed by collection name.\n   * @type {Map<string, Mongo.Collection>}\n   * @memberof Mongo\n   * @protected\n   */\n  _collections: new Map(),\n})\n\n\n\n/**\n * @summary Create a Mongo-style `ObjectID`.  If you don't specify a `hexString`, the `ObjectID` will be generated randomly (not using MongoDB's ID construction rules).\n * @locus Anywhere\n * @class\n * @param {String} [hexString] Optional.  The 24-character hexadecimal contents of the ObjectID to create\n */\nMongo.ObjectID = MongoID.ObjectID;\n\n/**\n * @summary To create a cursor, use find. To access the documents in a cursor, use forEach, map, or fetch.\n * @class\n * @instanceName cursor\n */\nMongo.Cursor = LocalCollection.Cursor;\n\n/**\n * @deprecated in 0.9.1\n */\nMongo.Collection.Cursor = Mongo.Cursor;\n\n/**\n * @deprecated in 0.9.1\n */\nMongo.Collection.ObjectID = Mongo.ObjectID;\n\n/**\n * @deprecated in 0.9.1\n */\nMeteor.Collection = Mongo.Collection;\n\n\n// Allow deny stuff is now in the allow-deny package\nObject.assign(Mongo.Collection.prototype, AllowDeny.CollectionPrototype);\n\n// Só agora que Mongo.Collection existe, adicionamos o método ao prototype\nObject.assign(Mongo.Collection.prototype, { watchChangeStream });\n\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fe263d3f7d70b13bbb9b7b8977ea849e380c73de"}
