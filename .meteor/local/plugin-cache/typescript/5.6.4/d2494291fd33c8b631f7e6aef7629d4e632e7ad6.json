{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_document_view.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/ddp-server/session_document_view.ts","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_document_view.ts","inputSourceMap":{"version":3,"file":"packages/ddp-server/session_document_view.ts","sourceRoot":"","sources":["packages/ddp-server/session_document_view.ts"],"names":[],"mappings":"AASA,MAAM,OAAO,mBAAmB;IACtB,QAAQ,CAAc;IACtB,SAAS,CAAgC;IAEjD;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,4BAA4B;QACvD,gBAAgB;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,qDAAqD;IACnF,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAwB,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,GAAG,EAAE,EAAE;YAC7C,GAAG,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,UAAU,CACR,kBAA0B,EAC1B,GAAW,EACX,eAAgC;QAEhC,+CAA+C;QAC/C,IAAI,GAAG,KAAK,KAAK;YAAE,OAAO;QAE1B,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,gEAAgE;QAChE,YAAY;QACZ,IAAI,CAAC,cAAc;YAAE,OAAO;QAE5B,IAAI,YAAY,GAAQ,SAAS,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,UAAU,CAAC,kBAAkB,KAAK,kBAAkB,EAAE,CAAC;gBACzD,wEAAwE;gBACxE,2BAA2B;gBAC3B,IAAI,CAAC,KAAK,CAAC;oBAAE,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;gBAC7C,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,MAAM;YACR,CAAC;QACH,CAAC;QAED,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3B,eAAe,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;QACnC,CAAC;aAAM,IACL,YAAY,KAAK,SAAS;YAC1B,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EACpD,CAAC;YACD,eAAe,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjD,CAAC;IACH,CAAC;IAED,WAAW,CACT,kBAA0B,EAC1B,GAAW,EACX,KAAU,EACV,eAAgC,EAChC,QAAiB,KAAK;QAEtB,+CAA+C;QAC/C,IAAI,GAAG,KAAK,KAAK;YAAE,OAAO;QAE1B,yDAAyD;QACzD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE;gBACtB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;aACzD,CAAC,CAAC;YACH,eAAe,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC7B,OAAO;QACT,CAAC;QAED,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;QAChD,IAAI,GAA+B,CAAC;QAEpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,GAAG,GAAG,cAAc,CAAC,IAAI,CACvB,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,kBAAkB,KAAK,kBAAkB,CACrE,CAAC;QACJ,CAAC;QAED,IAAI,GAAG,EAAE,CAAC;YACR,IAAI,GAAG,KAAK,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjE,yDAAyD;gBACzD,eAAe,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC/B,CAAC;YACD,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;aAAM,CAAC;YACN,qDAAqD;YACrD,cAAc,CAAC,IAAI,CAAC,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;CACF","sourcesContent":["interface PrecedenceItem {\n  subscriptionHandle: string;\n  value: any;\n}\n\ninterface ChangeCollector {\n  [key: string]: any;\n}\n\nexport class SessionDocumentView {\n  private existsIn: Set<string>;\n  private dataByKey: Map<string, PrecedenceItem[]>;\n\n  constructor() {\n    this.existsIn = new Set(); // set of subscriptionHandle\n    // Memory Growth\n    this.dataByKey = new Map(); // key-> [ {subscriptionHandle, value} by precedence]\n  }\n\n  getFields(): Record<string, any> {\n    const ret: Record<string, any> = {};\n    this.dataByKey.forEach((precedenceList, key) => {\n      ret[key] = precedenceList[0].value;\n    });\n    return ret;\n  }\n\n  clearField(\n    subscriptionHandle: string,\n    key: string,\n    changeCollector: ChangeCollector\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    const precedenceList = this.dataByKey.get(key);\n    // It's okay to clear fields that didn't exist. No need to throw\n    // an error.\n    if (!precedenceList) return;\n\n    let removedValue: any = undefined;\n\n    for (let i = 0; i < precedenceList.length; i++) {\n      const precedence = precedenceList[i];\n      if (precedence.subscriptionHandle === subscriptionHandle) {\n        // The view's value can only change if this subscription is the one that\n        // used to have precedence.\n        if (i === 0) removedValue = precedence.value;\n        precedenceList.splice(i, 1);\n        break;\n      }\n    }\n\n    if (precedenceList.length === 0) {\n      this.dataByKey.delete(key);\n      changeCollector[key] = undefined;\n    } else if (\n      removedValue !== undefined &&\n      !EJSON.equals(removedValue, precedenceList[0].value)\n    ) {\n      changeCollector[key] = precedenceList[0].value;\n    }\n  }\n\n  changeField(\n    subscriptionHandle: string,\n    key: string,\n    value: any,\n    changeCollector: ChangeCollector,\n    isAdd: boolean = false\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    // Don't share state with the data passed in by the user.\n    value = EJSON.clone(value);\n\n    if (!this.dataByKey.has(key)) {\n      this.dataByKey.set(key, [\n        { subscriptionHandle: subscriptionHandle, value: value },\n      ]);\n      changeCollector[key] = value;\n      return;\n    }\n\n    const precedenceList = this.dataByKey.get(key)!;\n    let elt: PrecedenceItem | undefined;\n\n    if (!isAdd) {\n      elt = precedenceList.find(\n        (precedence) => precedence.subscriptionHandle === subscriptionHandle\n      );\n    }\n\n    if (elt) {\n      if (elt === precedenceList[0] && !EJSON.equals(value, elt.value)) {\n        // this subscription is changing the value of this field.\n        changeCollector[key] = value;\n      }\n      elt.value = value;\n    } else {\n      // this subscription is newly caring about this field\n      precedenceList.push({ subscriptionHandle: subscriptionHandle, value: value });\n    }\n  }\n}"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_document_view.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-server/session_document_view.ts","inputSourceMap":{"version":3,"file":"packages/ddp-server/session_document_view.ts","sourceRoot":"","sources":["packages/ddp-server/session_document_view.ts"],"names":[],"mappings":"AASA,MAAM,OAAO,mBAAmB;IACtB,QAAQ,CAAc;IACtB,SAAS,CAAgC;IAEjD;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,4BAA4B;QACvD,gBAAgB;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,qDAAqD;IACnF,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAwB,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,GAAG,EAAE,EAAE;YAC7C,GAAG,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,UAAU,CACR,kBAA0B,EAC1B,GAAW,EACX,eAAgC;QAEhC,+CAA+C;QAC/C,IAAI,GAAG,KAAK,KAAK;YAAE,OAAO;QAE1B,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,gEAAgE;QAChE,YAAY;QACZ,IAAI,CAAC,cAAc;YAAE,OAAO;QAE5B,IAAI,YAAY,GAAQ,SAAS,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,UAAU,CAAC,kBAAkB,KAAK,kBAAkB,EAAE,CAAC;gBACzD,wEAAwE;gBACxE,2BAA2B;gBAC3B,IAAI,CAAC,KAAK,CAAC;oBAAE,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;gBAC7C,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,MAAM;YACR,CAAC;QACH,CAAC;QAED,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3B,eAAe,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;QACnC,CAAC;aAAM,IACL,YAAY,KAAK,SAAS;YAC1B,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EACpD,CAAC;YACD,eAAe,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjD,CAAC;IACH,CAAC;IAED,WAAW,CACT,kBAA0B,EAC1B,GAAW,EACX,KAAU,EACV,eAAgC,EAChC,QAAiB,KAAK;QAEtB,+CAA+C;QAC/C,IAAI,GAAG,KAAK,KAAK;YAAE,OAAO;QAE1B,yDAAyD;QACzD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE;gBACtB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;aACzD,CAAC,CAAC;YACH,eAAe,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC7B,OAAO;QACT,CAAC;QAED,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;QAChD,IAAI,GAA+B,CAAC;QAEpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,GAAG,GAAG,cAAc,CAAC,IAAI,CACvB,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,kBAAkB,KAAK,kBAAkB,CACrE,CAAC;QACJ,CAAC;QAED,IAAI,GAAG,EAAE,CAAC;YACR,IAAI,GAAG,KAAK,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjE,yDAAyD;gBACzD,eAAe,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC/B,CAAC;YACD,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;aAAM,CAAC;YACN,qDAAqD;YACrD,cAAc,CAAC,IAAI,CAAC,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;CACF","sourcesContent":["interface PrecedenceItem {\n  subscriptionHandle: string;\n  value: any;\n}\n\ninterface ChangeCollector {\n  [key: string]: any;\n}\n\nexport class SessionDocumentView {\n  private existsIn: Set<string>;\n  private dataByKey: Map<string, PrecedenceItem[]>;\n\n  constructor() {\n    this.existsIn = new Set(); // set of subscriptionHandle\n    // Memory Growth\n    this.dataByKey = new Map(); // key-> [ {subscriptionHandle, value} by precedence]\n  }\n\n  getFields(): Record<string, any> {\n    const ret: Record<string, any> = {};\n    this.dataByKey.forEach((precedenceList, key) => {\n      ret[key] = precedenceList[0].value;\n    });\n    return ret;\n  }\n\n  clearField(\n    subscriptionHandle: string,\n    key: string,\n    changeCollector: ChangeCollector\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    const precedenceList = this.dataByKey.get(key);\n    // It's okay to clear fields that didn't exist. No need to throw\n    // an error.\n    if (!precedenceList) return;\n\n    let removedValue: any = undefined;\n\n    for (let i = 0; i < precedenceList.length; i++) {\n      const precedence = precedenceList[i];\n      if (precedence.subscriptionHandle === subscriptionHandle) {\n        // The view's value can only change if this subscription is the one that\n        // used to have precedence.\n        if (i === 0) removedValue = precedence.value;\n        precedenceList.splice(i, 1);\n        break;\n      }\n    }\n\n    if (precedenceList.length === 0) {\n      this.dataByKey.delete(key);\n      changeCollector[key] = undefined;\n    } else if (\n      removedValue !== undefined &&\n      !EJSON.equals(removedValue, precedenceList[0].value)\n    ) {\n      changeCollector[key] = precedenceList[0].value;\n    }\n  }\n\n  changeField(\n    subscriptionHandle: string,\n    key: string,\n    value: any,\n    changeCollector: ChangeCollector,\n    isAdd: boolean = false\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    // Don't share state with the data passed in by the user.\n    value = EJSON.clone(value);\n\n    if (!this.dataByKey.has(key)) {\n      this.dataByKey.set(key, [\n        { subscriptionHandle: subscriptionHandle, value: value },\n      ]);\n      changeCollector[key] = value;\n      return;\n    }\n\n    const precedenceList = this.dataByKey.get(key)!;\n    let elt: PrecedenceItem | undefined;\n\n    if (!isAdd) {\n      elt = precedenceList.find(\n        (precedence) => precedence.subscriptionHandle === subscriptionHandle\n      );\n    }\n\n    if (elt) {\n      if (elt === precedenceList[0] && !EJSON.equals(value, elt.value)) {\n        // this subscription is changing the value of this field.\n        changeCollector[key] = value;\n      }\n      elt.value = value;\n    } else {\n      // this subscription is newly caring about this field\n      precedenceList.push({ subscriptionHandle: subscriptionHandle, value: value });\n    }\n  }\n}"]}}},"code":"module.export({\n  SessionDocumentView: () => SessionDocumentView\n});\nclass SessionDocumentView {\n  constructor() {\n    this.existsIn = void 0;\n    this.dataByKey = void 0;\n    this.existsIn = new Set(); // set of subscriptionHandle\n    // Memory Growth\n    this.dataByKey = new Map(); // key-> [ {subscriptionHandle, value} by precedence]\n  }\n  getFields() {\n    const ret = {};\n    this.dataByKey.forEach((precedenceList, key) => {\n      ret[key] = precedenceList[0].value;\n    });\n    return ret;\n  }\n  clearField(subscriptionHandle, key, changeCollector) {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n    const precedenceList = this.dataByKey.get(key);\n    // It's okay to clear fields that didn't exist. No need to throw\n    // an error.\n    if (!precedenceList) return;\n    let removedValue = undefined;\n    for (let i = 0; i < precedenceList.length; i++) {\n      const precedence = precedenceList[i];\n      if (precedence.subscriptionHandle === subscriptionHandle) {\n        // The view's value can only change if this subscription is the one that\n        // used to have precedence.\n        if (i === 0) removedValue = precedence.value;\n        precedenceList.splice(i, 1);\n        break;\n      }\n    }\n    if (precedenceList.length === 0) {\n      this.dataByKey.delete(key);\n      changeCollector[key] = undefined;\n    } else if (removedValue !== undefined && !EJSON.equals(removedValue, precedenceList[0].value)) {\n      changeCollector[key] = precedenceList[0].value;\n    }\n  }\n  changeField(subscriptionHandle, key, value, changeCollector) {\n    let isAdd = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n    // Don't share state with the data passed in by the user.\n    value = EJSON.clone(value);\n    if (!this.dataByKey.has(key)) {\n      this.dataByKey.set(key, [{\n        subscriptionHandle: subscriptionHandle,\n        value: value\n      }]);\n      changeCollector[key] = value;\n      return;\n    }\n    const precedenceList = this.dataByKey.get(key);\n    let elt;\n    if (!isAdd) {\n      elt = precedenceList.find(precedence => precedence.subscriptionHandle === subscriptionHandle);\n    }\n    if (elt) {\n      if (elt === precedenceList[0] && !EJSON.equals(value, elt.value)) {\n        // this subscription is changing the value of this field.\n        changeCollector[key] = value;\n      }\n      elt.value = value;\n    } else {\n      // this subscription is newly caring about this field\n      precedenceList.push({\n        subscriptionHandle: subscriptionHandle,\n        value: value\n      });\n    }\n  }\n}","map":{"version":3,"names":["module","export","SessionDocumentView","constructor","existsIn","dataByKey","Set","Map","getFields","ret","forEach","precedenceList","key","value","clearField","subscriptionHandle","changeCollector","get","removedValue","undefined","i","length","precedence","splice","delete","EJSON","equals","changeField","isAdd","arguments","clone","has","set","elt","find","push"],"sources":["packages/ddp-server/session_document_view.ts"],"sourcesContent":["interface PrecedenceItem {\n  subscriptionHandle: string;\n  value: any;\n}\n\ninterface ChangeCollector {\n  [key: string]: any;\n}\n\nexport class SessionDocumentView {\n  private existsIn: Set<string>;\n  private dataByKey: Map<string, PrecedenceItem[]>;\n\n  constructor() {\n    this.existsIn = new Set(); // set of subscriptionHandle\n    // Memory Growth\n    this.dataByKey = new Map(); // key-> [ {subscriptionHandle, value} by precedence]\n  }\n\n  getFields(): Record<string, any> {\n    const ret: Record<string, any> = {};\n    this.dataByKey.forEach((precedenceList, key) => {\n      ret[key] = precedenceList[0].value;\n    });\n    return ret;\n  }\n\n  clearField(\n    subscriptionHandle: string,\n    key: string,\n    changeCollector: ChangeCollector\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    const precedenceList = this.dataByKey.get(key);\n    // It's okay to clear fields that didn't exist. No need to throw\n    // an error.\n    if (!precedenceList) return;\n\n    let removedValue: any = undefined;\n\n    for (let i = 0; i < precedenceList.length; i++) {\n      const precedence = precedenceList[i];\n      if (precedence.subscriptionHandle === subscriptionHandle) {\n        // The view's value can only change if this subscription is the one that\n        // used to have precedence.\n        if (i === 0) removedValue = precedence.value;\n        precedenceList.splice(i, 1);\n        break;\n      }\n    }\n\n    if (precedenceList.length === 0) {\n      this.dataByKey.delete(key);\n      changeCollector[key] = undefined;\n    } else if (\n      removedValue !== undefined &&\n      !EJSON.equals(removedValue, precedenceList[0].value)\n    ) {\n      changeCollector[key] = precedenceList[0].value;\n    }\n  }\n\n  changeField(\n    subscriptionHandle: string,\n    key: string,\n    value: any,\n    changeCollector: ChangeCollector,\n    isAdd: boolean = false\n  ): void {\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\") return;\n\n    // Don't share state with the data passed in by the user.\n    value = EJSON.clone(value);\n\n    if (!this.dataByKey.has(key)) {\n      this.dataByKey.set(key, [\n        { subscriptionHandle: subscriptionHandle, value: value },\n      ]);\n      changeCollector[key] = value;\n      return;\n    }\n\n    const precedenceList = this.dataByKey.get(key)!;\n    let elt: PrecedenceItem | undefined;\n\n    if (!isAdd) {\n      elt = precedenceList.find(\n        (precedence) => precedence.subscriptionHandle === subscriptionHandle\n      );\n    }\n\n    if (elt) {\n      if (elt === precedenceList[0] && !EJSON.equals(value, elt.value)) {\n        // this subscription is changing the value of this field.\n        changeCollector[key] = value;\n      }\n      elt.value = value;\n    } else {\n      // this subscription is newly caring about this field\n      precedenceList.push({ subscriptionHandle: subscriptionHandle, value: value });\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d2494291fd33c8b631f7e6aef7629d4e632e7ad6"}
