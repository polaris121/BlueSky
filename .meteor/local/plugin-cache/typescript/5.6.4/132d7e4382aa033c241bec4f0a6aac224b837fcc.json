{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\observe_multiplex.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/mongo/observe_multiplex.ts","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\observe_multiplex.ts","inputSourceMap":{"version":3,"file":"packages/mongo/observe_multiplex.ts","sourceRoot":"","sources":["packages/mongo/observe_multiplex.ts"],"names":[],"mappings":"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","sourcesContent":["import isEmpty from 'lodash.isempty';\nimport { ObserveHandle } from './observe_handle';\n\ninterface ObserveMultiplexerOptions {\n  ordered: boolean;\n  onStop?: () => void;\n}\n\nexport type ObserveHandleCallback = 'added' | 'addedBefore' | 'changed' | 'movedBefore' | 'removed';\n\n/**\n * Allows multiple identical ObserveHandles to be driven by a single observe driver.\n *\n * This optimization ensures that multiple identical observations\n * don't result in duplicate database queries.\n */\nexport class ObserveMultiplexer {\n  private readonly _ordered: boolean;\n  private readonly _onStop: () => void;\n  private _queue: any;\n  private _handles: { [key: string]: ObserveHandle } | null;\n  private _resolver: ((value?: unknown) => void) | null;\n  private readonly _readyPromise: Promise<boolean | void>;\n  private _isReady: boolean;\n  private _cache: any;\n  private _addHandleTasksScheduledButNotPerformed: number;\n\n  constructor({ ordered, onStop = () => {} }: ObserveMultiplexerOptions) {\n    if (ordered === undefined) throw Error(\"must specify ordered\");\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", 1);\n\n    this._ordered = ordered;\n    this._onStop = onStop;\n    this._queue = new Meteor._AsynchronousQueue();\n    this._handles = {};\n    this._resolver = null;\n    this._isReady = false;\n    this._readyPromise = new Promise(r => this._resolver = r).then(() => this._isReady = true);\n    // @ts-ignore\n    this._cache = new LocalCollection._CachingChangeObserver({ ordered });\n    this._addHandleTasksScheduledButNotPerformed = 0;\n\n    this.callbackNames().forEach(callbackName => {\n      (this as any)[callbackName] = (...args: any[]) => {\n        this._applyCallback(callbackName, args);\n      };\n    });\n  }\n\n  addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    return this._addHandleAndSendInitialAdds(handle);\n  }\n\n  async _addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    ++this._addHandleTasksScheduledButNotPerformed;\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", 1);\n\n    await this._queue.runTask(async () => {\n      this._handles![handle._id] = handle;\n      await this._sendAdds(handle);\n      --this._addHandleTasksScheduledButNotPerformed;\n    });\n    await this._readyPromise;\n  }\n\n  async removeHandle(id: number): Promise<void> {\n    if (!this._ready())\n      throw new Error(\"Can't remove handles until the multiplex is ready\");\n\n    delete this._handles![id];\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", -1);\n\n    if (isEmpty(this._handles) &&\n      this._addHandleTasksScheduledButNotPerformed === 0) {\n      await this._stop();\n    }\n  }\n\n  async _stop(options: { fromQueryError?: boolean } = {}): Promise<void> {\n    if (!this._ready() && !options.fromQueryError)\n      throw Error(\"surprising _stop: not ready\");\n\n    await this._onStop();\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", -1);\n\n    this._handles = null;\n  }\n\n  async ready(): Promise<void> {\n    await this._queue.queueTask(() => {\n      if (this._ready())\n        throw Error(\"can't make ObserveMultiplex ready twice!\");\n\n      if (!this._resolver) {\n        throw new Error(\"Missing resolver\");\n      }\n\n      this._resolver();\n      this._isReady = true;\n    });\n  }\n\n  async queryError(err: Error): Promise<void> {\n    await this._queue.runTask(() => {\n      if (this._ready())\n        throw Error(\"can't claim query has an error after it worked!\");\n      this._stop({ fromQueryError: true });\n      throw err;\n    });\n  }\n\n  async onFlush(cb: () => void): Promise<void> {\n    await this._queue.queueTask(async () => {\n      if (!this._ready())\n        throw Error(\"only call onFlush on a multiplexer that will be ready\");\n      await cb();\n    });\n  }\n\n  callbackNames(): ObserveHandleCallback[] {\n    return this._ordered\n      ? [\"addedBefore\", \"changed\", \"movedBefore\", \"removed\"]\n      : [\"added\", \"changed\", \"removed\"];\n  }\n\n  _ready(): boolean {\n    return !!this._isReady;\n  }\n\n  _applyCallback(callbackName: string, args: any[]) {\n    this._queue.queueTask(async () => {\n      if (!this._handles) return;\n\n      await this._cache.applyChange[callbackName].apply(null, args);\n      if (!this._ready() &&\n        (callbackName !== 'added' && callbackName !== 'addedBefore')) {\n        throw new Error(`Got ${callbackName} during initial adds`);\n      }\n\n      for (const handleId of Object.keys(this._handles)) {\n        const handle = this._handles && this._handles[handleId];\n\n        if (!handle) return;\n\n        const callback = (handle as any)[`_${callbackName}`];\n\n        if (!callback) continue;\n\n        handle.initialAddsSent.then(callback.apply(\n          null,\n          handle.nonMutatingCallbacks ? args : EJSON.clone(args)\n        ))\n      }\n    });\n  }\n\n  async _sendAdds(handle: ObserveHandle): Promise<void> {\n    const add = this._ordered ? handle._addedBefore : handle._added;\n    if (!add) return;\n\n    const addPromises: Promise<void>[] = [];\n\n    this._cache.docs.forEach((doc: any, id: string) => {\n      if (!(handle._id in this._handles!)) {\n        throw Error(\"handle got removed before sending initial adds!\");\n      }\n\n      const { _id, ...fields } = handle.nonMutatingCallbacks ? doc : EJSON.clone(doc);\n\n      const promise = this._ordered ?\n        add(id, fields, null) :\n        add(id, fields);\n\n      addPromises.push(promise);\n    });\n\n    await Promise.all(addPromises);\n\n    handle.initialAddsSentResolver();\n  }\n}"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\observe_multiplex.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/observe_multiplex.ts","inputSourceMap":{"version":3,"file":"packages/mongo/observe_multiplex.ts","sourceRoot":"","sources":["packages/mongo/observe_multiplex.ts"],"names":[],"mappings":"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","sourcesContent":["import isEmpty from 'lodash.isempty';\nimport { ObserveHandle } from './observe_handle';\n\ninterface ObserveMultiplexerOptions {\n  ordered: boolean;\n  onStop?: () => void;\n}\n\nexport type ObserveHandleCallback = 'added' | 'addedBefore' | 'changed' | 'movedBefore' | 'removed';\n\n/**\n * Allows multiple identical ObserveHandles to be driven by a single observe driver.\n *\n * This optimization ensures that multiple identical observations\n * don't result in duplicate database queries.\n */\nexport class ObserveMultiplexer {\n  private readonly _ordered: boolean;\n  private readonly _onStop: () => void;\n  private _queue: any;\n  private _handles: { [key: string]: ObserveHandle } | null;\n  private _resolver: ((value?: unknown) => void) | null;\n  private readonly _readyPromise: Promise<boolean | void>;\n  private _isReady: boolean;\n  private _cache: any;\n  private _addHandleTasksScheduledButNotPerformed: number;\n\n  constructor({ ordered, onStop = () => {} }: ObserveMultiplexerOptions) {\n    if (ordered === undefined) throw Error(\"must specify ordered\");\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", 1);\n\n    this._ordered = ordered;\n    this._onStop = onStop;\n    this._queue = new Meteor._AsynchronousQueue();\n    this._handles = {};\n    this._resolver = null;\n    this._isReady = false;\n    this._readyPromise = new Promise(r => this._resolver = r).then(() => this._isReady = true);\n    // @ts-ignore\n    this._cache = new LocalCollection._CachingChangeObserver({ ordered });\n    this._addHandleTasksScheduledButNotPerformed = 0;\n\n    this.callbackNames().forEach(callbackName => {\n      (this as any)[callbackName] = (...args: any[]) => {\n        this._applyCallback(callbackName, args);\n      };\n    });\n  }\n\n  addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    return this._addHandleAndSendInitialAdds(handle);\n  }\n\n  async _addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    ++this._addHandleTasksScheduledButNotPerformed;\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", 1);\n\n    await this._queue.runTask(async () => {\n      this._handles![handle._id] = handle;\n      await this._sendAdds(handle);\n      --this._addHandleTasksScheduledButNotPerformed;\n    });\n    await this._readyPromise;\n  }\n\n  async removeHandle(id: number): Promise<void> {\n    if (!this._ready())\n      throw new Error(\"Can't remove handles until the multiplex is ready\");\n\n    delete this._handles![id];\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", -1);\n\n    if (isEmpty(this._handles) &&\n      this._addHandleTasksScheduledButNotPerformed === 0) {\n      await this._stop();\n    }\n  }\n\n  async _stop(options: { fromQueryError?: boolean } = {}): Promise<void> {\n    if (!this._ready() && !options.fromQueryError)\n      throw Error(\"surprising _stop: not ready\");\n\n    await this._onStop();\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", -1);\n\n    this._handles = null;\n  }\n\n  async ready(): Promise<void> {\n    await this._queue.queueTask(() => {\n      if (this._ready())\n        throw Error(\"can't make ObserveMultiplex ready twice!\");\n\n      if (!this._resolver) {\n        throw new Error(\"Missing resolver\");\n      }\n\n      this._resolver();\n      this._isReady = true;\n    });\n  }\n\n  async queryError(err: Error): Promise<void> {\n    await this._queue.runTask(() => {\n      if (this._ready())\n        throw Error(\"can't claim query has an error after it worked!\");\n      this._stop({ fromQueryError: true });\n      throw err;\n    });\n  }\n\n  async onFlush(cb: () => void): Promise<void> {\n    await this._queue.queueTask(async () => {\n      if (!this._ready())\n        throw Error(\"only call onFlush on a multiplexer that will be ready\");\n      await cb();\n    });\n  }\n\n  callbackNames(): ObserveHandleCallback[] {\n    return this._ordered\n      ? [\"addedBefore\", \"changed\", \"movedBefore\", \"removed\"]\n      : [\"added\", \"changed\", \"removed\"];\n  }\n\n  _ready(): boolean {\n    return !!this._isReady;\n  }\n\n  _applyCallback(callbackName: string, args: any[]) {\n    this._queue.queueTask(async () => {\n      if (!this._handles) return;\n\n      await this._cache.applyChange[callbackName].apply(null, args);\n      if (!this._ready() &&\n        (callbackName !== 'added' && callbackName !== 'addedBefore')) {\n        throw new Error(`Got ${callbackName} during initial adds`);\n      }\n\n      for (const handleId of Object.keys(this._handles)) {\n        const handle = this._handles && this._handles[handleId];\n\n        if (!handle) return;\n\n        const callback = (handle as any)[`_${callbackName}`];\n\n        if (!callback) continue;\n\n        handle.initialAddsSent.then(callback.apply(\n          null,\n          handle.nonMutatingCallbacks ? args : EJSON.clone(args)\n        ))\n      }\n    });\n  }\n\n  async _sendAdds(handle: ObserveHandle): Promise<void> {\n    const add = this._ordered ? handle._addedBefore : handle._added;\n    if (!add) return;\n\n    const addPromises: Promise<void>[] = [];\n\n    this._cache.docs.forEach((doc: any, id: string) => {\n      if (!(handle._id in this._handles!)) {\n        throw Error(\"handle got removed before sending initial adds!\");\n      }\n\n      const { _id, ...fields } = handle.nonMutatingCallbacks ? doc : EJSON.clone(doc);\n\n      const promise = this._ordered ?\n        add(id, fields, null) :\n        add(id, fields);\n\n      addPromises.push(promise);\n    });\n\n    await Promise.all(addPromises);\n\n    handle.initialAddsSentResolver();\n  }\n}"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    const _excluded = [\"_id\"];\n    module.export({\n      ObserveMultiplexer: () => ObserveMultiplexer\n    });\n    let isEmpty;\n    module.link(\"lodash.isempty\", {\n      default(v) {\n        isEmpty = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ObserveMultiplexer {\n      constructor(_ref) {\n        var _this = this;\n        let {\n          ordered,\n          onStop = () => {}\n        } = _ref;\n        this._ordered = void 0;\n        this._onStop = void 0;\n        this._queue = void 0;\n        this._handles = void 0;\n        this._resolver = void 0;\n        this._readyPromise = void 0;\n        this._isReady = void 0;\n        this._cache = void 0;\n        this._addHandleTasksScheduledButNotPerformed = void 0;\n        if (ordered === undefined) throw Error(\"must specify ordered\");\n        // @ts-ignore\n        Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", 1);\n        this._ordered = ordered;\n        this._onStop = onStop;\n        this._queue = new Meteor._AsynchronousQueue();\n        this._handles = {};\n        this._resolver = null;\n        this._isReady = false;\n        this._readyPromise = new Promise(r => this._resolver = r).then(() => this._isReady = true);\n        // @ts-ignore\n        this._cache = new LocalCollection._CachingChangeObserver({\n          ordered\n        });\n        this._addHandleTasksScheduledButNotPerformed = 0;\n        this.callbackNames().forEach(callbackName => {\n          this[callbackName] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            _this._applyCallback(callbackName, args);\n          };\n        });\n      }\n      addHandleAndSendInitialAdds(handle) {\n        return this._addHandleAndSendInitialAdds(handle);\n      }\n      async _addHandleAndSendInitialAdds(handle) {\n        ++this._addHandleTasksScheduledButNotPerformed;\n        // @ts-ignore\n        Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\"mongo-livedata\", \"observe-handles\", 1);\n        await this._queue.runTask(async () => {\n          this._handles[handle._id] = handle;\n          await this._sendAdds(handle);\n          --this._addHandleTasksScheduledButNotPerformed;\n        });\n        await this._readyPromise;\n      }\n      async removeHandle(id) {\n        if (!this._ready()) throw new Error(\"Can't remove handles until the multiplex is ready\");\n        delete this._handles[id];\n        // @ts-ignore\n        Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\"mongo-livedata\", \"observe-handles\", -1);\n        if (isEmpty(this._handles) && this._addHandleTasksScheduledButNotPerformed === 0) {\n          await this._stop();\n        }\n      }\n      async _stop() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (!this._ready() && !options.fromQueryError) throw Error(\"surprising _stop: not ready\");\n        await this._onStop();\n        // @ts-ignore\n        Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", -1);\n        this._handles = null;\n      }\n      async ready() {\n        await this._queue.queueTask(() => {\n          if (this._ready()) throw Error(\"can't make ObserveMultiplex ready twice!\");\n          if (!this._resolver) {\n            throw new Error(\"Missing resolver\");\n          }\n          this._resolver();\n          this._isReady = true;\n        });\n      }\n      async queryError(err) {\n        await this._queue.runTask(() => {\n          if (this._ready()) throw Error(\"can't claim query has an error after it worked!\");\n          this._stop({\n            fromQueryError: true\n          });\n          throw err;\n        });\n      }\n      async onFlush(cb) {\n        await this._queue.queueTask(async () => {\n          if (!this._ready()) throw Error(\"only call onFlush on a multiplexer that will be ready\");\n          await cb();\n        });\n      }\n      callbackNames() {\n        return this._ordered ? [\"addedBefore\", \"changed\", \"movedBefore\", \"removed\"] : [\"added\", \"changed\", \"removed\"];\n      }\n      _ready() {\n        return !!this._isReady;\n      }\n      _applyCallback(callbackName, args) {\n        this._queue.queueTask(async () => {\n          if (!this._handles) return;\n          await this._cache.applyChange[callbackName].apply(null, args);\n          if (!this._ready() && callbackName !== 'added' && callbackName !== 'addedBefore') {\n            throw new Error(\"Got \".concat(callbackName, \" during initial adds\"));\n          }\n          for (const handleId of Object.keys(this._handles)) {\n            const handle = this._handles && this._handles[handleId];\n            if (!handle) return;\n            const callback = handle[\"_\".concat(callbackName)];\n            if (!callback) continue;\n            handle.initialAddsSent.then(callback.apply(null, handle.nonMutatingCallbacks ? args : EJSON.clone(args)));\n          }\n        });\n      }\n      async _sendAdds(handle) {\n        const add = this._ordered ? handle._addedBefore : handle._added;\n        if (!add) return;\n        const addPromises = [];\n        this._cache.docs.forEach((doc, id) => {\n          if (!(handle._id in this._handles)) {\n            throw Error(\"handle got removed before sending initial adds!\");\n          }\n          const _ref2 = handle.nonMutatingCallbacks ? doc : EJSON.clone(doc),\n            {\n              _id\n            } = _ref2,\n            fields = _objectWithoutProperties(_ref2, _excluded);\n          const promise = this._ordered ? add(id, fields, null) : add(id, fields);\n          addPromises.push(promise);\n        });\n        await Promise.all(addPromises);\n        handle.initialAddsSentResolver();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_excluded","export","ObserveMultiplexer","isEmpty","__reifyWaitForDeps__","constructor","_ref","_this","ordered","onStop","_ordered","_onStop","_queue","_handles","_resolver","_readyPromise","_isReady","_cache","_addHandleTasksScheduledButNotPerformed","undefined","Error","Package","Facts","incrementServerFact","Meteor","_AsynchronousQueue","Promise","r","then","LocalCollection","_CachingChangeObserver","callbackNames","forEach","callbackName","_len","arguments","length","args","Array","_key","_applyCallback","addHandleAndSendInitialAdds","handle","_addHandleAndSendInitialAdds","runTask","_id","_sendAdds","removeHandle","id","_ready","_stop","options","fromQueryError","ready","queueTask","queryError","err","onFlush","cb","applyChange","apply","concat","handleId","Object","keys","callback","initialAddsSent","nonMutatingCallbacks","EJSON","clone","add","_addedBefore","_added","addPromises","docs","doc","_ref2","fields","promise","push","all","initialAddsSentResolver","__reify_async_result__","_reifyError","self","async"],"sources":["packages/mongo/observe_multiplex.ts"],"sourcesContent":["import isEmpty from 'lodash.isempty';\nimport { ObserveHandle } from './observe_handle';\n\ninterface ObserveMultiplexerOptions {\n  ordered: boolean;\n  onStop?: () => void;\n}\n\nexport type ObserveHandleCallback = 'added' | 'addedBefore' | 'changed' | 'movedBefore' | 'removed';\n\n/**\n * Allows multiple identical ObserveHandles to be driven by a single observe driver.\n *\n * This optimization ensures that multiple identical observations\n * don't result in duplicate database queries.\n */\nexport class ObserveMultiplexer {\n  private readonly _ordered: boolean;\n  private readonly _onStop: () => void;\n  private _queue: any;\n  private _handles: { [key: string]: ObserveHandle } | null;\n  private _resolver: ((value?: unknown) => void) | null;\n  private readonly _readyPromise: Promise<boolean | void>;\n  private _isReady: boolean;\n  private _cache: any;\n  private _addHandleTasksScheduledButNotPerformed: number;\n\n  constructor({ ordered, onStop = () => {} }: ObserveMultiplexerOptions) {\n    if (ordered === undefined) throw Error(\"must specify ordered\");\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", 1);\n\n    this._ordered = ordered;\n    this._onStop = onStop;\n    this._queue = new Meteor._AsynchronousQueue();\n    this._handles = {};\n    this._resolver = null;\n    this._isReady = false;\n    this._readyPromise = new Promise(r => this._resolver = r).then(() => this._isReady = true);\n    // @ts-ignore\n    this._cache = new LocalCollection._CachingChangeObserver({ ordered });\n    this._addHandleTasksScheduledButNotPerformed = 0;\n\n    this.callbackNames().forEach(callbackName => {\n      (this as any)[callbackName] = (...args: any[]) => {\n        this._applyCallback(callbackName, args);\n      };\n    });\n  }\n\n  addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    return this._addHandleAndSendInitialAdds(handle);\n  }\n\n  async _addHandleAndSendInitialAdds(handle: ObserveHandle): Promise<void> {\n    ++this._addHandleTasksScheduledButNotPerformed;\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", 1);\n\n    await this._queue.runTask(async () => {\n      this._handles![handle._id] = handle;\n      await this._sendAdds(handle);\n      --this._addHandleTasksScheduledButNotPerformed;\n    });\n    await this._readyPromise;\n  }\n\n  async removeHandle(id: number): Promise<void> {\n    if (!this._ready())\n      throw new Error(\"Can't remove handles until the multiplex is ready\");\n\n    delete this._handles![id];\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-handles\", -1);\n\n    if (isEmpty(this._handles) &&\n      this._addHandleTasksScheduledButNotPerformed === 0) {\n      await this._stop();\n    }\n  }\n\n  async _stop(options: { fromQueryError?: boolean } = {}): Promise<void> {\n    if (!this._ready() && !options.fromQueryError)\n      throw Error(\"surprising _stop: not ready\");\n\n    await this._onStop();\n\n    // @ts-ignore\n    Package['facts-base'] && Package['facts-base']\n        .Facts.incrementServerFact(\"mongo-livedata\", \"observe-multiplexers\", -1);\n\n    this._handles = null;\n  }\n\n  async ready(): Promise<void> {\n    await this._queue.queueTask(() => {\n      if (this._ready())\n        throw Error(\"can't make ObserveMultiplex ready twice!\");\n\n      if (!this._resolver) {\n        throw new Error(\"Missing resolver\");\n      }\n\n      this._resolver();\n      this._isReady = true;\n    });\n  }\n\n  async queryError(err: Error): Promise<void> {\n    await this._queue.runTask(() => {\n      if (this._ready())\n        throw Error(\"can't claim query has an error after it worked!\");\n      this._stop({ fromQueryError: true });\n      throw err;\n    });\n  }\n\n  async onFlush(cb: () => void): Promise<void> {\n    await this._queue.queueTask(async () => {\n      if (!this._ready())\n        throw Error(\"only call onFlush on a multiplexer that will be ready\");\n      await cb();\n    });\n  }\n\n  callbackNames(): ObserveHandleCallback[] {\n    return this._ordered\n      ? [\"addedBefore\", \"changed\", \"movedBefore\", \"removed\"]\n      : [\"added\", \"changed\", \"removed\"];\n  }\n\n  _ready(): boolean {\n    return !!this._isReady;\n  }\n\n  _applyCallback(callbackName: string, args: any[]) {\n    this._queue.queueTask(async () => {\n      if (!this._handles) return;\n\n      await this._cache.applyChange[callbackName].apply(null, args);\n      if (!this._ready() &&\n        (callbackName !== 'added' && callbackName !== 'addedBefore')) {\n        throw new Error(`Got ${callbackName} during initial adds`);\n      }\n\n      for (const handleId of Object.keys(this._handles)) {\n        const handle = this._handles && this._handles[handleId];\n\n        if (!handle) return;\n\n        const callback = (handle as any)[`_${callbackName}`];\n\n        if (!callback) continue;\n\n        handle.initialAddsSent.then(callback.apply(\n          null,\n          handle.nonMutatingCallbacks ? args : EJSON.clone(args)\n        ))\n      }\n    });\n  }\n\n  async _sendAdds(handle: ObserveHandle): Promise<void> {\n    const add = this._ordered ? handle._addedBefore : handle._added;\n    if (!add) return;\n\n    const addPromises: Promise<void>[] = [];\n\n    this._cache.docs.forEach((doc: any, id: string) => {\n      if (!(handle._id in this._handles!)) {\n        throw Error(\"handle got removed before sending initial adds!\");\n      }\n\n      const { _id, ...fields } = handle.nonMutatingCallbacks ? doc : EJSON.clone(doc);\n\n      const promise = this._ordered ?\n        add(id, fields, null) :\n        add(id, fields);\n\n      addPromises.push(promise);\n    });\n\n    await Promise.all(addPromises);\n\n    handle.initialAddsSentResolver();\n  }\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"132d7e4382aa033c241bec4f0a6aac224b837fcc"}
