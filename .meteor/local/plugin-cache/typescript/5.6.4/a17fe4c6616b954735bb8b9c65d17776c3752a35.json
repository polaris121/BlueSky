{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_collection_view.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/ddp-server/session_collection_view.ts","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_collection_view.ts","inputSourceMap":{"version":3,"file":"packages/ddp-server/session_collection_view.ts","sourceRoot":"","sources":["packages/ddp-server/session_collection_view.ts"],"names":[],"mappings":"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","sourcesContent":["import { DummyDocumentView } from \"./dummy_document_view\";\nimport { SessionDocumentView } from \"./session_document_view\";\n\ninterface SessionCallbacks {\n  added: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  changed: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  removed: (collectionName: string, id: string) => void;\n}\n\ntype DocumentView = SessionDocumentView | DummyDocumentView;\n\nexport class SessionCollectionView {\n  private readonly collectionName: string;\n  private readonly documents: Map<string, DocumentView>;\n  private readonly callbacks: SessionCallbacks;\n\n  /**\n   * Represents a client's view of a single collection\n   * @param collectionName - Name of the collection it represents\n   * @param sessionCallbacks - The callbacks for added, changed, removed\n   */\n  constructor(collectionName: string, sessionCallbacks: SessionCallbacks) {\n    this.collectionName = collectionName;\n    this.documents = new Map();\n    this.callbacks = sessionCallbacks;\n  }\n\n  public isEmpty(): boolean {\n    return this.documents.size === 0;\n  }\n\n  public diff(previous: SessionCollectionView): void {\n    DiffSequence.diffMaps(previous.documents, this.documents, {\n      both: this.diffDocument.bind(this),\n      rightOnly: (id: string, nowDV: DocumentView) => {\n        this.callbacks.added(this.collectionName, id, nowDV.getFields());\n      },\n      leftOnly: (id: string, prevDV: DocumentView) => {\n        this.callbacks.removed(this.collectionName, id);\n      }\n    });\n  }\n\n  private diffDocument(id: string, prevDV: DocumentView, nowDV: DocumentView): void {\n    const fields: Record<string, any> = {};\n    \n    DiffSequence.diffObjects(prevDV.getFields(), nowDV.getFields(), {\n      both: (key: string, prev: any, now: any) => {\n        if (!EJSON.equals(prev, now)) {\n          fields[key] = now;\n        }\n      },\n      rightOnly: (key: string, now: any) => {\n        fields[key] = now;\n      },\n      leftOnly: (key: string, prev: any) => {\n        fields[key] = undefined;\n      }\n    });\n    \n    this.callbacks.changed(this.collectionName, id, fields);\n  }\n\n  public added(subscriptionHandle: string, id: string, fields: Record<string, any>): void {\n    let docView: DocumentView | undefined = this.documents.get(id);\n    let added = false;\n\n    if (!docView) {\n      added = true;\n      if (Meteor.server.getPublicationStrategy(this.collectionName).useDummyDocumentView) {\n        docView = new DummyDocumentView();\n      } else {\n        docView = new SessionDocumentView();\n      }\n      this.documents.set(id, docView);\n    }\n\n    docView.existsIn.add(subscriptionHandle);\n    const changeCollector: Record<string, any> = {};\n\n    Object.entries(fields).forEach(([key, value]) => {\n      docView!.changeField(\n        subscriptionHandle,\n        key,\n        value,\n        changeCollector,\n        true\n      );\n    });\n\n    if (added) {\n      this.callbacks.added(this.collectionName, id, changeCollector);\n    } else {\n      this.callbacks.changed(this.collectionName, id, changeCollector);\n    }\n  }\n\n  public changed(subscriptionHandle: string, id: string, changed: Record<string, any>): void {\n    const changedResult: Record<string, any> = {};\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Could not find element with id ${id} to change`);\n    }\n\n    Object.entries(changed).forEach(([key, value]) => {\n      if (value === undefined) {\n        docView.clearField(subscriptionHandle, key, changedResult);\n      } else {\n        docView.changeField(subscriptionHandle, key, value, changedResult);\n      }\n    });\n\n    this.callbacks.changed(this.collectionName, id, changedResult);\n  }\n\n  public removed(subscriptionHandle: string, id: string): void {\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Removed nonexistent document ${id}`);\n    }\n\n    docView.existsIn.delete(subscriptionHandle);\n\n    if (docView.existsIn.size === 0) {\n      // it is gone from everyone\n      this.callbacks.removed(this.collectionName, id);\n      this.documents.delete(id);\n    } else {\n      const changed: Record<string, any> = {};\n      // remove this subscription from every precedence list\n      // and record the changes\n      docView.dataByKey.forEach((precedenceList, key) => {\n        docView.clearField(subscriptionHandle, key, changed);\n      });\n      this.callbacks.changed(this.collectionName, id, changed);\n    }\n  }\n}"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\ddp-server\\session_collection_view.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-server/session_collection_view.ts","inputSourceMap":{"version":3,"file":"packages/ddp-server/session_collection_view.ts","sourceRoot":"","sources":["packages/ddp-server/session_collection_view.ts"],"names":[],"mappings":"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","sourcesContent":["import { DummyDocumentView } from \"./dummy_document_view\";\nimport { SessionDocumentView } from \"./session_document_view\";\n\ninterface SessionCallbacks {\n  added: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  changed: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  removed: (collectionName: string, id: string) => void;\n}\n\ntype DocumentView = SessionDocumentView | DummyDocumentView;\n\nexport class SessionCollectionView {\n  private readonly collectionName: string;\n  private readonly documents: Map<string, DocumentView>;\n  private readonly callbacks: SessionCallbacks;\n\n  /**\n   * Represents a client's view of a single collection\n   * @param collectionName - Name of the collection it represents\n   * @param sessionCallbacks - The callbacks for added, changed, removed\n   */\n  constructor(collectionName: string, sessionCallbacks: SessionCallbacks) {\n    this.collectionName = collectionName;\n    this.documents = new Map();\n    this.callbacks = sessionCallbacks;\n  }\n\n  public isEmpty(): boolean {\n    return this.documents.size === 0;\n  }\n\n  public diff(previous: SessionCollectionView): void {\n    DiffSequence.diffMaps(previous.documents, this.documents, {\n      both: this.diffDocument.bind(this),\n      rightOnly: (id: string, nowDV: DocumentView) => {\n        this.callbacks.added(this.collectionName, id, nowDV.getFields());\n      },\n      leftOnly: (id: string, prevDV: DocumentView) => {\n        this.callbacks.removed(this.collectionName, id);\n      }\n    });\n  }\n\n  private diffDocument(id: string, prevDV: DocumentView, nowDV: DocumentView): void {\n    const fields: Record<string, any> = {};\n    \n    DiffSequence.diffObjects(prevDV.getFields(), nowDV.getFields(), {\n      both: (key: string, prev: any, now: any) => {\n        if (!EJSON.equals(prev, now)) {\n          fields[key] = now;\n        }\n      },\n      rightOnly: (key: string, now: any) => {\n        fields[key] = now;\n      },\n      leftOnly: (key: string, prev: any) => {\n        fields[key] = undefined;\n      }\n    });\n    \n    this.callbacks.changed(this.collectionName, id, fields);\n  }\n\n  public added(subscriptionHandle: string, id: string, fields: Record<string, any>): void {\n    let docView: DocumentView | undefined = this.documents.get(id);\n    let added = false;\n\n    if (!docView) {\n      added = true;\n      if (Meteor.server.getPublicationStrategy(this.collectionName).useDummyDocumentView) {\n        docView = new DummyDocumentView();\n      } else {\n        docView = new SessionDocumentView();\n      }\n      this.documents.set(id, docView);\n    }\n\n    docView.existsIn.add(subscriptionHandle);\n    const changeCollector: Record<string, any> = {};\n\n    Object.entries(fields).forEach(([key, value]) => {\n      docView!.changeField(\n        subscriptionHandle,\n        key,\n        value,\n        changeCollector,\n        true\n      );\n    });\n\n    if (added) {\n      this.callbacks.added(this.collectionName, id, changeCollector);\n    } else {\n      this.callbacks.changed(this.collectionName, id, changeCollector);\n    }\n  }\n\n  public changed(subscriptionHandle: string, id: string, changed: Record<string, any>): void {\n    const changedResult: Record<string, any> = {};\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Could not find element with id ${id} to change`);\n    }\n\n    Object.entries(changed).forEach(([key, value]) => {\n      if (value === undefined) {\n        docView.clearField(subscriptionHandle, key, changedResult);\n      } else {\n        docView.changeField(subscriptionHandle, key, value, changedResult);\n      }\n    });\n\n    this.callbacks.changed(this.collectionName, id, changedResult);\n  }\n\n  public removed(subscriptionHandle: string, id: string): void {\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Removed nonexistent document ${id}`);\n    }\n\n    docView.existsIn.delete(subscriptionHandle);\n\n    if (docView.existsIn.size === 0) {\n      // it is gone from everyone\n      this.callbacks.removed(this.collectionName, id);\n      this.documents.delete(id);\n    } else {\n      const changed: Record<string, any> = {};\n      // remove this subscription from every precedence list\n      // and record the changes\n      docView.dataByKey.forEach((precedenceList, key) => {\n        docView.clearField(subscriptionHandle, key, changed);\n      });\n      this.callbacks.changed(this.collectionName, id, changed);\n    }\n  }\n}"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      SessionCollectionView: () => SessionCollectionView\n    });\n    let DummyDocumentView;\n    module.link(\"./dummy_document_view\", {\n      DummyDocumentView(v) {\n        DummyDocumentView = v;\n      }\n    }, 0);\n    let SessionDocumentView;\n    module.link(\"./session_document_view\", {\n      SessionDocumentView(v) {\n        SessionDocumentView = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SessionCollectionView {\n      /**\n       * Represents a client's view of a single collection\n       * @param collectionName - Name of the collection it represents\n       * @param sessionCallbacks - The callbacks for added, changed, removed\n       */\n      constructor(collectionName, sessionCallbacks) {\n        this.collectionName = void 0;\n        this.documents = void 0;\n        this.callbacks = void 0;\n        this.collectionName = collectionName;\n        this.documents = new Map();\n        this.callbacks = sessionCallbacks;\n      }\n      isEmpty() {\n        return this.documents.size === 0;\n      }\n      diff(previous) {\n        DiffSequence.diffMaps(previous.documents, this.documents, {\n          both: this.diffDocument.bind(this),\n          rightOnly: (id, nowDV) => {\n            this.callbacks.added(this.collectionName, id, nowDV.getFields());\n          },\n          leftOnly: (id, prevDV) => {\n            this.callbacks.removed(this.collectionName, id);\n          }\n        });\n      }\n      diffDocument(id, prevDV, nowDV) {\n        const fields = {};\n        DiffSequence.diffObjects(prevDV.getFields(), nowDV.getFields(), {\n          both: (key, prev, now) => {\n            if (!EJSON.equals(prev, now)) {\n              fields[key] = now;\n            }\n          },\n          rightOnly: (key, now) => {\n            fields[key] = now;\n          },\n          leftOnly: (key, prev) => {\n            fields[key] = undefined;\n          }\n        });\n        this.callbacks.changed(this.collectionName, id, fields);\n      }\n      added(subscriptionHandle, id, fields) {\n        let docView = this.documents.get(id);\n        let added = false;\n        if (!docView) {\n          added = true;\n          if (Meteor.server.getPublicationStrategy(this.collectionName).useDummyDocumentView) {\n            docView = new DummyDocumentView();\n          } else {\n            docView = new SessionDocumentView();\n          }\n          this.documents.set(id, docView);\n        }\n        docView.existsIn.add(subscriptionHandle);\n        const changeCollector = {};\n        Object.entries(fields).forEach(_ref => {\n          let [key, value] = _ref;\n          docView.changeField(subscriptionHandle, key, value, changeCollector, true);\n        });\n        if (added) {\n          this.callbacks.added(this.collectionName, id, changeCollector);\n        } else {\n          this.callbacks.changed(this.collectionName, id, changeCollector);\n        }\n      }\n      changed(subscriptionHandle, id, changed) {\n        const changedResult = {};\n        const docView = this.documents.get(id);\n        if (!docView) {\n          throw new Error(\"Could not find element with id \".concat(id, \" to change\"));\n        }\n        Object.entries(changed).forEach(_ref2 => {\n          let [key, value] = _ref2;\n          if (value === undefined) {\n            docView.clearField(subscriptionHandle, key, changedResult);\n          } else {\n            docView.changeField(subscriptionHandle, key, value, changedResult);\n          }\n        });\n        this.callbacks.changed(this.collectionName, id, changedResult);\n      }\n      removed(subscriptionHandle, id) {\n        const docView = this.documents.get(id);\n        if (!docView) {\n          throw new Error(\"Removed nonexistent document \".concat(id));\n        }\n        docView.existsIn.delete(subscriptionHandle);\n        if (docView.existsIn.size === 0) {\n          // it is gone from everyone\n          this.callbacks.removed(this.collectionName, id);\n          this.documents.delete(id);\n        } else {\n          const changed = {};\n          // remove this subscription from every precedence list\n          // and record the changes\n          docView.dataByKey.forEach((precedenceList, key) => {\n            docView.clearField(subscriptionHandle, key, changed);\n          });\n          this.callbacks.changed(this.collectionName, id, changed);\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","SessionCollectionView","DummyDocumentView","link","v","SessionDocumentView","__reifyWaitForDeps__","constructor","collectionName","sessionCallbacks","documents","callbacks","Map","isEmpty","size","diff","previous","DiffSequence","diffMaps","both","diffDocument","bind","rightOnly","id","nowDV","added","getFields","leftOnly","prevDV","removed","fields","diffObjects","key","prev","now","EJSON","equals","undefined","changed","subscriptionHandle","docView","get","Meteor","server","getPublicationStrategy","useDummyDocumentView","set","existsIn","add","changeCollector","Object","entries","forEach","_ref","value","changeField","changedResult","Error","concat","_ref2","clearField","delete","dataByKey","precedenceList","__reify_async_result__","_reifyError","self","async"],"sources":["packages/ddp-server/session_collection_view.ts"],"sourcesContent":["import { DummyDocumentView } from \"./dummy_document_view\";\nimport { SessionDocumentView } from \"./session_document_view\";\n\ninterface SessionCallbacks {\n  added: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  changed: (collectionName: string, id: string, fields: Record<string, any>) => void;\n  removed: (collectionName: string, id: string) => void;\n}\n\ntype DocumentView = SessionDocumentView | DummyDocumentView;\n\nexport class SessionCollectionView {\n  private readonly collectionName: string;\n  private readonly documents: Map<string, DocumentView>;\n  private readonly callbacks: SessionCallbacks;\n\n  /**\n   * Represents a client's view of a single collection\n   * @param collectionName - Name of the collection it represents\n   * @param sessionCallbacks - The callbacks for added, changed, removed\n   */\n  constructor(collectionName: string, sessionCallbacks: SessionCallbacks) {\n    this.collectionName = collectionName;\n    this.documents = new Map();\n    this.callbacks = sessionCallbacks;\n  }\n\n  public isEmpty(): boolean {\n    return this.documents.size === 0;\n  }\n\n  public diff(previous: SessionCollectionView): void {\n    DiffSequence.diffMaps(previous.documents, this.documents, {\n      both: this.diffDocument.bind(this),\n      rightOnly: (id: string, nowDV: DocumentView) => {\n        this.callbacks.added(this.collectionName, id, nowDV.getFields());\n      },\n      leftOnly: (id: string, prevDV: DocumentView) => {\n        this.callbacks.removed(this.collectionName, id);\n      }\n    });\n  }\n\n  private diffDocument(id: string, prevDV: DocumentView, nowDV: DocumentView): void {\n    const fields: Record<string, any> = {};\n    \n    DiffSequence.diffObjects(prevDV.getFields(), nowDV.getFields(), {\n      both: (key: string, prev: any, now: any) => {\n        if (!EJSON.equals(prev, now)) {\n          fields[key] = now;\n        }\n      },\n      rightOnly: (key: string, now: any) => {\n        fields[key] = now;\n      },\n      leftOnly: (key: string, prev: any) => {\n        fields[key] = undefined;\n      }\n    });\n    \n    this.callbacks.changed(this.collectionName, id, fields);\n  }\n\n  public added(subscriptionHandle: string, id: string, fields: Record<string, any>): void {\n    let docView: DocumentView | undefined = this.documents.get(id);\n    let added = false;\n\n    if (!docView) {\n      added = true;\n      if (Meteor.server.getPublicationStrategy(this.collectionName).useDummyDocumentView) {\n        docView = new DummyDocumentView();\n      } else {\n        docView = new SessionDocumentView();\n      }\n      this.documents.set(id, docView);\n    }\n\n    docView.existsIn.add(subscriptionHandle);\n    const changeCollector: Record<string, any> = {};\n\n    Object.entries(fields).forEach(([key, value]) => {\n      docView!.changeField(\n        subscriptionHandle,\n        key,\n        value,\n        changeCollector,\n        true\n      );\n    });\n\n    if (added) {\n      this.callbacks.added(this.collectionName, id, changeCollector);\n    } else {\n      this.callbacks.changed(this.collectionName, id, changeCollector);\n    }\n  }\n\n  public changed(subscriptionHandle: string, id: string, changed: Record<string, any>): void {\n    const changedResult: Record<string, any> = {};\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Could not find element with id ${id} to change`);\n    }\n\n    Object.entries(changed).forEach(([key, value]) => {\n      if (value === undefined) {\n        docView.clearField(subscriptionHandle, key, changedResult);\n      } else {\n        docView.changeField(subscriptionHandle, key, value, changedResult);\n      }\n    });\n\n    this.callbacks.changed(this.collectionName, id, changedResult);\n  }\n\n  public removed(subscriptionHandle: string, id: string): void {\n    const docView = this.documents.get(id);\n\n    if (!docView) {\n      throw new Error(`Removed nonexistent document ${id}`);\n    }\n\n    docView.existsIn.delete(subscriptionHandle);\n\n    if (docView.existsIn.size === 0) {\n      // it is gone from everyone\n      this.callbacks.removed(this.collectionName, id);\n      this.documents.delete(id);\n    } else {\n      const changed: Record<string, any> = {};\n      // remove this subscription from every precedence list\n      // and record the changes\n      docView.dataByKey.forEach((precedenceList, key) => {\n        docView.clearField(subscriptionHandle, key, changed);\n      });\n      this.callbacks.changed(this.collectionName, id, changed);\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a17fe4c6616b954735bb8b9c65d17776c3752a35"}
