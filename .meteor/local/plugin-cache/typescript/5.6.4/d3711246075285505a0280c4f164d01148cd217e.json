{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\cursor.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/mongo/cursor.ts","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\cursor.ts","inputSourceMap":{"version":3,"file":"packages/mongo/cursor.ts","sourceRoot":"","sources":["packages/mongo/cursor.ts"],"names":[],"mappings":"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","sourcesContent":["import { ASYNC_CURSOR_METHODS, getAsyncMethodName } from 'meteor/minimongo/constants';\nimport { replaceMeteorAtomWithMongo, replaceTypes } from './mongo_common';\nimport LocalCollection from 'meteor/minimongo/local_collection';\nimport { CursorDescription } from './cursor_description';\nimport { ObserveCallbacks, ObserveChangesCallbacks } from './types';\n\ninterface MongoInterface {\n  rawCollection: (collectionName: string) => any;\n  _createAsynchronousCursor: (cursorDescription: CursorDescription, options: CursorOptions) => any;\n  _observeChanges: (cursorDescription: CursorDescription, ordered: boolean, callbacks: any, nonMutatingCallbacks?: boolean) => any;\n}\n\ninterface CursorOptions {\n  selfForIteration: Cursor<any>;\n  useTransform: boolean;\n}\n\n/**\n * @class Cursor\n *\n * The main cursor object returned from find(), implementing the documented\n * Mongo.Collection cursor API.\n *\n * Wraps a CursorDescription and lazily creates an AsynchronousCursor\n * (only contacts MongoDB when methods like fetch or forEach are called).\n */\nexport class Cursor<T, U = T> {\n  public _mongo: MongoInterface;\n  public _cursorDescription: CursorDescription;\n  public _synchronousCursor: any | null;\n\n  constructor(mongo: MongoInterface, cursorDescription: CursorDescription) {\n    this._mongo = mongo;\n    this._cursorDescription = cursorDescription;\n    this._synchronousCursor = null;\n  }\n\n  async countAsync(): Promise<number> {\n    const collection = this._mongo.rawCollection(this._cursorDescription.collectionName);\n    return await collection.countDocuments(\n      replaceTypes(this._cursorDescription.selector, replaceMeteorAtomWithMongo),\n      replaceTypes(this._cursorDescription.options, replaceMeteorAtomWithMongo),\n    );\n  }\n\n  count(): never {\n    throw new Error(\n      \"count() is not available on the server. Please use countAsync() instead.\"\n    );\n  }\n\n  getTransform(): ((doc: any) => any) | undefined {\n    return this._cursorDescription.options.transform;\n  }\n\n  _publishCursor(sub: any): any {\n    const collection = this._cursorDescription.collectionName;\n    return Mongo.Collection._publishCursor(this, sub, collection);\n  }\n\n  _getCollectionName(): string {\n    return this._cursorDescription.collectionName;\n  }\n\n  observe(callbacks: ObserveCallbacks<U>): any {\n    return LocalCollection._observeFromObserveChanges(this, callbacks);\n  }\n\n  async observeAsync(callbacks: ObserveCallbacks<U>): Promise<any> {\n    return new Promise(resolve => resolve(this.observe(callbacks)));\n  }\n\n  observeChanges(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): any {\n    const ordered = LocalCollection._observeChangesCallbacksAreOrdered(callbacks);\n    return this._mongo._observeChanges(\n      this._cursorDescription,\n      ordered,\n      callbacks,\n      options.nonMutatingCallbacks\n    );\n  }\n\n  async observeChangesAsync(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): Promise<any> {\n    return this.observeChanges(callbacks, options);\n  }\n}\n\n// Add cursor methods dynamically\n[...ASYNC_CURSOR_METHODS, Symbol.iterator, Symbol.asyncIterator].forEach(methodName => {\n  if (methodName === 'count') return;\n\n  (Cursor.prototype as any)[methodName] = function(this: Cursor<any>, ...args: any[]): any {\n    const cursor = setupAsynchronousCursor(this, methodName);\n    return cursor[methodName](...args);\n  };\n\n  if (methodName === Symbol.iterator || methodName === Symbol.asyncIterator) return;\n\n  const methodNameAsync = getAsyncMethodName(methodName);\n\n  (Cursor.prototype as any)[methodNameAsync] = function(this: Cursor<any>, ...args: any[]): Promise<any> {\n    return this[methodName](...args);\n  };\n});\n\nfunction setupAsynchronousCursor(cursor: Cursor<any>, method: string | symbol): any {\n  if (cursor._cursorDescription.options.tailable) {\n    throw new Error(`Cannot call ${String(method)} on a tailable cursor`);\n  }\n\n  if (!cursor._synchronousCursor) {\n    cursor._synchronousCursor = cursor._mongo._createAsynchronousCursor(\n      cursor._cursorDescription,\n      {\n        selfForIteration: cursor,\n        useTransform: true,\n      }\n    );\n  }\n\n  return cursor._synchronousCursor;\n}"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\cursor.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/cursor.ts","inputSourceMap":{"version":3,"file":"packages/mongo/cursor.ts","sourceRoot":"","sources":["packages/mongo/cursor.ts"],"names":[],"mappings":"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","sourcesContent":["import { ASYNC_CURSOR_METHODS, getAsyncMethodName } from 'meteor/minimongo/constants';\nimport { replaceMeteorAtomWithMongo, replaceTypes } from './mongo_common';\nimport LocalCollection from 'meteor/minimongo/local_collection';\nimport { CursorDescription } from './cursor_description';\nimport { ObserveCallbacks, ObserveChangesCallbacks } from './types';\n\ninterface MongoInterface {\n  rawCollection: (collectionName: string) => any;\n  _createAsynchronousCursor: (cursorDescription: CursorDescription, options: CursorOptions) => any;\n  _observeChanges: (cursorDescription: CursorDescription, ordered: boolean, callbacks: any, nonMutatingCallbacks?: boolean) => any;\n}\n\ninterface CursorOptions {\n  selfForIteration: Cursor<any>;\n  useTransform: boolean;\n}\n\n/**\n * @class Cursor\n *\n * The main cursor object returned from find(), implementing the documented\n * Mongo.Collection cursor API.\n *\n * Wraps a CursorDescription and lazily creates an AsynchronousCursor\n * (only contacts MongoDB when methods like fetch or forEach are called).\n */\nexport class Cursor<T, U = T> {\n  public _mongo: MongoInterface;\n  public _cursorDescription: CursorDescription;\n  public _synchronousCursor: any | null;\n\n  constructor(mongo: MongoInterface, cursorDescription: CursorDescription) {\n    this._mongo = mongo;\n    this._cursorDescription = cursorDescription;\n    this._synchronousCursor = null;\n  }\n\n  async countAsync(): Promise<number> {\n    const collection = this._mongo.rawCollection(this._cursorDescription.collectionName);\n    return await collection.countDocuments(\n      replaceTypes(this._cursorDescription.selector, replaceMeteorAtomWithMongo),\n      replaceTypes(this._cursorDescription.options, replaceMeteorAtomWithMongo),\n    );\n  }\n\n  count(): never {\n    throw new Error(\n      \"count() is not available on the server. Please use countAsync() instead.\"\n    );\n  }\n\n  getTransform(): ((doc: any) => any) | undefined {\n    return this._cursorDescription.options.transform;\n  }\n\n  _publishCursor(sub: any): any {\n    const collection = this._cursorDescription.collectionName;\n    return Mongo.Collection._publishCursor(this, sub, collection);\n  }\n\n  _getCollectionName(): string {\n    return this._cursorDescription.collectionName;\n  }\n\n  observe(callbacks: ObserveCallbacks<U>): any {\n    return LocalCollection._observeFromObserveChanges(this, callbacks);\n  }\n\n  async observeAsync(callbacks: ObserveCallbacks<U>): Promise<any> {\n    return new Promise(resolve => resolve(this.observe(callbacks)));\n  }\n\n  observeChanges(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): any {\n    const ordered = LocalCollection._observeChangesCallbacksAreOrdered(callbacks);\n    return this._mongo._observeChanges(\n      this._cursorDescription,\n      ordered,\n      callbacks,\n      options.nonMutatingCallbacks\n    );\n  }\n\n  async observeChangesAsync(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): Promise<any> {\n    return this.observeChanges(callbacks, options);\n  }\n}\n\n// Add cursor methods dynamically\n[...ASYNC_CURSOR_METHODS, Symbol.iterator, Symbol.asyncIterator].forEach(methodName => {\n  if (methodName === 'count') return;\n\n  (Cursor.prototype as any)[methodName] = function(this: Cursor<any>, ...args: any[]): any {\n    const cursor = setupAsynchronousCursor(this, methodName);\n    return cursor[methodName](...args);\n  };\n\n  if (methodName === Symbol.iterator || methodName === Symbol.asyncIterator) return;\n\n  const methodNameAsync = getAsyncMethodName(methodName);\n\n  (Cursor.prototype as any)[methodNameAsync] = function(this: Cursor<any>, ...args: any[]): Promise<any> {\n    return this[methodName](...args);\n  };\n});\n\nfunction setupAsynchronousCursor(cursor: Cursor<any>, method: string | symbol): any {\n  if (cursor._cursorDescription.options.tailable) {\n    throw new Error(`Cannot call ${String(method)} on a tailable cursor`);\n  }\n\n  if (!cursor._synchronousCursor) {\n    cursor._synchronousCursor = cursor._mongo._createAsynchronousCursor(\n      cursor._cursorDescription,\n      {\n        selfForIteration: cursor,\n        useTransform: true,\n      }\n    );\n  }\n\n  return cursor._synchronousCursor;\n}"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      Cursor: () => Cursor\n    });\n    let ASYNC_CURSOR_METHODS, getAsyncMethodName;\n    module.link(\"meteor/minimongo/constants\", {\n      ASYNC_CURSOR_METHODS(v) {\n        ASYNC_CURSOR_METHODS = v;\n      },\n      getAsyncMethodName(v) {\n        getAsyncMethodName = v;\n      }\n    }, 0);\n    let replaceMeteorAtomWithMongo, replaceTypes;\n    module.link(\"./mongo_common\", {\n      replaceMeteorAtomWithMongo(v) {\n        replaceMeteorAtomWithMongo = v;\n      },\n      replaceTypes(v) {\n        replaceTypes = v;\n      }\n    }, 1);\n    let LocalCollection;\n    module.link(\"meteor/minimongo/local_collection\", {\n      default(v) {\n        LocalCollection = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Cursor {\n      constructor(mongo, cursorDescription) {\n        this._mongo = void 0;\n        this._cursorDescription = void 0;\n        this._synchronousCursor = void 0;\n        this._mongo = mongo;\n        this._cursorDescription = cursorDescription;\n        this._synchronousCursor = null;\n      }\n      async countAsync() {\n        const collection = this._mongo.rawCollection(this._cursorDescription.collectionName);\n        return await collection.countDocuments(replaceTypes(this._cursorDescription.selector, replaceMeteorAtomWithMongo), replaceTypes(this._cursorDescription.options, replaceMeteorAtomWithMongo));\n      }\n      count() {\n        throw new Error(\"count() is not available on the server. Please use countAsync() instead.\");\n      }\n      getTransform() {\n        return this._cursorDescription.options.transform;\n      }\n      _publishCursor(sub) {\n        const collection = this._cursorDescription.collectionName;\n        return Mongo.Collection._publishCursor(this, sub, collection);\n      }\n      _getCollectionName() {\n        return this._cursorDescription.collectionName;\n      }\n      observe(callbacks) {\n        return LocalCollection._observeFromObserveChanges(this, callbacks);\n      }\n      async observeAsync(callbacks) {\n        return new Promise(resolve => resolve(this.observe(callbacks)));\n      }\n      observeChanges(callbacks) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const ordered = LocalCollection._observeChangesCallbacksAreOrdered(callbacks);\n        return this._mongo._observeChanges(this._cursorDescription, ordered, callbacks, options.nonMutatingCallbacks);\n      }\n      async observeChangesAsync(callbacks) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return this.observeChanges(callbacks, options);\n      }\n    }\n    // Add cursor methods dynamically\n    [...ASYNC_CURSOR_METHODS, Symbol.iterator, Symbol.asyncIterator].forEach(methodName => {\n      if (methodName === 'count') return;\n      Cursor.prototype[methodName] = function () {\n        const cursor = setupAsynchronousCursor(this, methodName);\n        return cursor[methodName](...arguments);\n      };\n      if (methodName === Symbol.iterator || methodName === Symbol.asyncIterator) return;\n      const methodNameAsync = getAsyncMethodName(methodName);\n      Cursor.prototype[methodNameAsync] = function () {\n        return this[methodName](...arguments);\n      };\n    });\n    function setupAsynchronousCursor(cursor, method) {\n      if (cursor._cursorDescription.options.tailable) {\n        throw new Error(\"Cannot call \".concat(String(method), \" on a tailable cursor\"));\n      }\n      if (!cursor._synchronousCursor) {\n        cursor._synchronousCursor = cursor._mongo._createAsynchronousCursor(cursor._cursorDescription, {\n          selfForIteration: cursor,\n          useTransform: true\n        });\n      }\n      return cursor._synchronousCursor;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","Cursor","ASYNC_CURSOR_METHODS","getAsyncMethodName","link","v","replaceMeteorAtomWithMongo","replaceTypes","LocalCollection","default","__reifyWaitForDeps__","constructor","mongo","cursorDescription","_mongo","_cursorDescription","_synchronousCursor","countAsync","collection","rawCollection","collectionName","countDocuments","selector","options","count","Error","getTransform","transform","_publishCursor","sub","Mongo","Collection","_getCollectionName","observe","callbacks","_observeFromObserveChanges","observeAsync","Promise","resolve","observeChanges","arguments","length","undefined","ordered","_observeChangesCallbacksAreOrdered","_observeChanges","nonMutatingCallbacks","observeChangesAsync","Symbol","iterator","asyncIterator","forEach","methodName","prototype","cursor","setupAsynchronousCursor","methodNameAsync","method","tailable","concat","String","_createAsynchronousCursor","selfForIteration","useTransform","__reify_async_result__","_reifyError","self","async"],"sources":["packages/mongo/cursor.ts"],"sourcesContent":["import { ASYNC_CURSOR_METHODS, getAsyncMethodName } from 'meteor/minimongo/constants';\nimport { replaceMeteorAtomWithMongo, replaceTypes } from './mongo_common';\nimport LocalCollection from 'meteor/minimongo/local_collection';\nimport { CursorDescription } from './cursor_description';\nimport { ObserveCallbacks, ObserveChangesCallbacks } from './types';\n\ninterface MongoInterface {\n  rawCollection: (collectionName: string) => any;\n  _createAsynchronousCursor: (cursorDescription: CursorDescription, options: CursorOptions) => any;\n  _observeChanges: (cursorDescription: CursorDescription, ordered: boolean, callbacks: any, nonMutatingCallbacks?: boolean) => any;\n}\n\ninterface CursorOptions {\n  selfForIteration: Cursor<any>;\n  useTransform: boolean;\n}\n\n/**\n * @class Cursor\n *\n * The main cursor object returned from find(), implementing the documented\n * Mongo.Collection cursor API.\n *\n * Wraps a CursorDescription and lazily creates an AsynchronousCursor\n * (only contacts MongoDB when methods like fetch or forEach are called).\n */\nexport class Cursor<T, U = T> {\n  public _mongo: MongoInterface;\n  public _cursorDescription: CursorDescription;\n  public _synchronousCursor: any | null;\n\n  constructor(mongo: MongoInterface, cursorDescription: CursorDescription) {\n    this._mongo = mongo;\n    this._cursorDescription = cursorDescription;\n    this._synchronousCursor = null;\n  }\n\n  async countAsync(): Promise<number> {\n    const collection = this._mongo.rawCollection(this._cursorDescription.collectionName);\n    return await collection.countDocuments(\n      replaceTypes(this._cursorDescription.selector, replaceMeteorAtomWithMongo),\n      replaceTypes(this._cursorDescription.options, replaceMeteorAtomWithMongo),\n    );\n  }\n\n  count(): never {\n    throw new Error(\n      \"count() is not available on the server. Please use countAsync() instead.\"\n    );\n  }\n\n  getTransform(): ((doc: any) => any) | undefined {\n    return this._cursorDescription.options.transform;\n  }\n\n  _publishCursor(sub: any): any {\n    const collection = this._cursorDescription.collectionName;\n    return Mongo.Collection._publishCursor(this, sub, collection);\n  }\n\n  _getCollectionName(): string {\n    return this._cursorDescription.collectionName;\n  }\n\n  observe(callbacks: ObserveCallbacks<U>): any {\n    return LocalCollection._observeFromObserveChanges(this, callbacks);\n  }\n\n  async observeAsync(callbacks: ObserveCallbacks<U>): Promise<any> {\n    return new Promise(resolve => resolve(this.observe(callbacks)));\n  }\n\n  observeChanges(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): any {\n    const ordered = LocalCollection._observeChangesCallbacksAreOrdered(callbacks);\n    return this._mongo._observeChanges(\n      this._cursorDescription,\n      ordered,\n      callbacks,\n      options.nonMutatingCallbacks\n    );\n  }\n\n  async observeChangesAsync(callbacks: ObserveChangesCallbacks<U>, options: { nonMutatingCallbacks?: boolean } = {}): Promise<any> {\n    return this.observeChanges(callbacks, options);\n  }\n}\n\n// Add cursor methods dynamically\n[...ASYNC_CURSOR_METHODS, Symbol.iterator, Symbol.asyncIterator].forEach(methodName => {\n  if (methodName === 'count') return;\n\n  (Cursor.prototype as any)[methodName] = function(this: Cursor<any>, ...args: any[]): any {\n    const cursor = setupAsynchronousCursor(this, methodName);\n    return cursor[methodName](...args);\n  };\n\n  if (methodName === Symbol.iterator || methodName === Symbol.asyncIterator) return;\n\n  const methodNameAsync = getAsyncMethodName(methodName);\n\n  (Cursor.prototype as any)[methodNameAsync] = function(this: Cursor<any>, ...args: any[]): Promise<any> {\n    return this[methodName](...args);\n  };\n});\n\nfunction setupAsynchronousCursor(cursor: Cursor<any>, method: string | symbol): any {\n  if (cursor._cursorDescription.options.tailable) {\n    throw new Error(`Cannot call ${String(method)} on a tailable cursor`);\n  }\n\n  if (!cursor._synchronousCursor) {\n    cursor._synchronousCursor = cursor._mongo._createAsynchronousCursor(\n      cursor._cursorDescription,\n      {\n        selfForIteration: cursor,\n        useTransform: true,\n      }\n    );\n  }\n\n  return cursor._synchronousCursor;\n}"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,MAAA,EAAAA,CAAA,KAAAA;IAAsB;IAAA,IAAAC,oBAA0B,EAAAC,kBAAA;IAAAJ,MAA4B,CAACK,IAAA;MAAAF,qBAAAG,CAAA;QAAAH,oBAAA,GAAAG,CAAA;MAAA;MAAAF,mBAAAE,CAAA;QAAAF,kBAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,0BAAA,EAAAC,YAAA;IAAAR,MAAA,CAAAK,IAAA;MAAAE,2BAAAD,CAAA;QAAAC,0BAAA,GAAAD,CAAA;MAAA;MAAAE,aAAAF,CAAA;QAAAE,YAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,eAAA;IAAAT,MAAA,CAAAK,IAAA;MAAAK,QAAAJ,CAAA;QAAAG,eAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IA0BhF,MAAOT,MAAM;MAKjBU,YAAYC,KAAqB,EAAEC,iBAAoC;QAAA,KAJhEC,MAAM;QAAA,KACNC,kBAAkB;QAAA,KAClBC,kBAAkB;QAGvB,IAAI,CAACF,MAAM,GAAGF,KAAK;QACnB,IAAI,CAACG,kBAAkB,GAAGF,iBAAiB;QAC3C,IAAI,CAACG,kBAAkB,GAAG,IAAI;MAChC;MAEA,MAAMC,UAAUA,CAAA;QACd,MAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,IAAI,CAACJ,kBAAkB,CAACK,cAAc,CAAC;QACpF,OAAO,MAAMF,UAAU,CAACG,cAAc,CACpCd,YAAY,CAAC,IAAI,CAACQ,kBAAkB,CAACO,QAAQ,EAAEhB,0BAA0B,CAAC,EAC1EC,YAAY,CAAC,IAAI,CAACQ,kBAAkB,CAACQ,OAAO,EAAEjB,0BAA0B,CAAC,CAC1E;MACH;MAEAkB,KAAKA,CAAA;QACH,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH;MAEAC,YAAYA,CAAA;QACV,OAAO,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAACI,SAAS;MAClD;MAEAC,cAAcA,CAACC,GAAQ;QACrB,MAAMX,UAAU,GAAG,IAAI,CAACH,kBAAkB,CAACK,cAAc;QACzD,OAAOU,KAAK,CAACC,UAAU,CAACH,cAAc,CAAC,IAAI,EAAEC,GAAG,EAAEX,UAAU,CAAC;MAC/D;MAEAc,kBAAkBA,CAAA;QAChB,OAAO,IAAI,CAACjB,kBAAkB,CAACK,cAAc;MAC/C;MAEAa,OAAOA,CAACC,SAA8B;QACpC,OAAO1B,eAAe,CAAC2B,0BAA0B,CAAC,IAAI,EAAED,SAAS,CAAC;MACpE;MAEA,MAAME,YAAYA,CAACF,SAA8B;QAC/C,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAIA,OAAO,CAAC,IAAI,CAACL,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC;MACjE;MAEAK,cAAcA,CAACL,SAAqC,EAAkD;QAAA,IAAhDX,OAAA,GAAAiB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA8C,EAAE;QACpG,MAAMG,OAAO,GAAGnC,eAAe,CAACoC,kCAAkC,CAACV,SAAS,CAAC;QAC7E,OAAO,IAAI,CAACpB,MAAM,CAAC+B,eAAe,CAChC,IAAI,CAAC9B,kBAAkB,EACvB4B,OAAO,EACPT,SAAS,EACTX,OAAO,CAACuB,oBAAoB,CAC7B;MACH;MAEA,MAAMC,mBAAmBA,CAACb,SAAqC,EAAkD;QAAA,IAAhDX,OAAA,GAAAiB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA8C,EAAE;QAC/G,OAAO,IAAI,CAACD,cAAc,CAACL,SAAS,EAAEX,OAAO,CAAC;MAChD;;IAGF;IACA,CAAC,GAAGrB,oBAAoB,EAAE8C,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACE,aAAa,CAAC,CAACC,OAAO,CAACC,UAAU,IAAG;MACpF,IAAIA,UAAU,KAAK,OAAO,EAAE;MAE3BnD,MAAM,CAACoD,SAAiB,CAACD,UAAU,CAAC,GAAG,YAA0C;QAChF,MAAME,MAAM,GAAGC,uBAAuB,CAAC,IAAI,EAAEH,UAAU,CAAC;QACxD,OAAOE,MAAM,CAACF,UAAU,CAAC,CAAC,GAAAZ,SAAO,CAAC;MACpC,CAAC;MAED,IAAIY,UAAU,KAAKJ,MAAM,CAACC,QAAQ,IAAIG,UAAU,KAAKJ,MAAM,CAACE,aAAa,EAAE;MAE3E,MAAMM,eAAe,GAAGrD,kBAAkB,CAACiD,UAAU,CAAC;MAErDnD,MAAM,CAACoD,SAAiB,CAACG,eAAe,CAAC,GAAG,YAA0C;QACrF,OAAO,IAAI,CAACJ,UAAU,CAAC,CAAC,GAAAZ,SAAO,CAAC;MAClC,CAAC;IACH,CAAC,CAAC;IAEF,SAASe,uBAAuBA,CAACD,MAAmB,EAAEG,MAAuB;MAC3E,IAAIH,MAAM,CAACvC,kBAAkB,CAACQ,OAAO,CAACmC,QAAQ,EAAE;QAC9C,MAAM,IAAIjC,KAAK,gBAAAkC,MAAA,CAAgBC,MAAM,CAACH,MAAM,CAAC,0BAAuB,CAAC;MACvE;MAEA,IAAI,CAACH,MAAM,CAACtC,kBAAkB,EAAE;QAC9BsC,MAAM,CAACtC,kBAAkB,GAAGsC,MAAM,CAACxC,MAAM,CAAC+C,yBAAyB,CACjEP,MAAM,CAACvC,kBAAkB,EACzB;UACE+C,gBAAgB,EAAER,MAAM;UACxBS,YAAY,EAAE;SACf,CACF;MACH;MAEA,OAAOT,MAAM,CAACtC,kBAAkB;IAClC;IAACgD,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d3711246075285505a0280c4f164d01148cd217e"}
