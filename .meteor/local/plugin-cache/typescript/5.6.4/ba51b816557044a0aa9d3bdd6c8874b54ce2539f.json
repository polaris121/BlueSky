{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\polling_observe_driver.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/mongo/polling_observe_driver.ts","filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\polling_observe_driver.ts","inputSourceMap":{"version":3,"file":"packages/mongo/polling_observe_driver.ts","sourceRoot":"","sources":["packages/mongo/polling_observe_driver.ts"],"names":[],"mappings":"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","sourcesContent":["import throttle from 'lodash.throttle';\nimport { listenAll } from './mongo_driver';\nimport { ObserveMultiplexer } from './observe_multiplex';\n\ninterface PollingObserveDriverOptions {\n  cursorDescription: any;\n  mongoHandle: any;\n  ordered: boolean;\n  multiplexer: ObserveMultiplexer;\n  _testOnlyPollCallback?: () => void;\n}\n\nconst POLLING_THROTTLE_MS = +(process.env.METEOR_POLLING_THROTTLE_MS || '') || 50;\nconst POLLING_INTERVAL_MS = +(process.env.METEOR_POLLING_INTERVAL_MS || '') || 10 * 1000;\n\n/**\n * @class PollingObserveDriver\n *\n * One of two observe driver implementations.\n *\n * Characteristics:\n * - Caches the results of a query\n * - Reruns the query when necessary\n * - Suitable for cases where oplog tailing is not available or practical\n */\nexport class PollingObserveDriver {\n  private _options: PollingObserveDriverOptions;\n  private _cursorDescription: any;\n  private _mongoHandle: any;\n  private _ordered: boolean;\n  private _multiplexer: any;\n  private _stopCallbacks: Array<() => Promise<void>>;\n  private _stopped: boolean;\n  private _cursor: any;\n  private _results: any;\n  private _pollsScheduledButNotStarted: number;\n  private _pendingWrites: any[];\n  private _ensurePollIsScheduled: Function;\n  private _taskQueue: any;\n  private _testOnlyPollCallback?: () => void;\n\n  constructor(options: PollingObserveDriverOptions) {\n    this._options = options;\n    this._cursorDescription = options.cursorDescription;\n    this._mongoHandle = options.mongoHandle;\n    this._ordered = options.ordered;\n    this._multiplexer = options.multiplexer;\n    this._stopCallbacks = [];\n    this._stopped = false;\n\n    this._cursor = this._mongoHandle._createAsynchronousCursor(\n      this._cursorDescription);\n\n    this._results = null;\n    this._pollsScheduledButNotStarted = 0;\n    this._pendingWrites = [];\n\n    this._ensurePollIsScheduled = throttle(\n      this._unthrottledEnsurePollIsScheduled.bind(this),\n      this._cursorDescription.options.pollingThrottleMs || POLLING_THROTTLE_MS\n    );\n\n    this._taskQueue = new (Meteor as any)._AsynchronousQueue();\n  }\n\n  async _init(): Promise<void> {\n    const options = this._options;\n    const listenersHandle = await listenAll(\n      this._cursorDescription,\n      (notification: any) => {\n        const fence = (DDPServer as any)._getCurrentFence();\n        if (fence) {\n          this._pendingWrites.push(fence.beginWrite());\n        }\n        if (this._pollsScheduledButNotStarted === 0) {\n          this._ensurePollIsScheduled();\n        }\n      }\n    );\n\n    this._stopCallbacks.push(async () => { await listenersHandle.stop(); });\n\n    if (options._testOnlyPollCallback) {\n      this._testOnlyPollCallback = options._testOnlyPollCallback;\n    } else {\n      const pollingInterval =\n        this._cursorDescription.options.pollingIntervalMs ||\n        this._cursorDescription.options._pollingInterval ||\n        POLLING_INTERVAL_MS;\n\n      const intervalHandle = Meteor.setInterval(\n        this._ensurePollIsScheduled.bind(this),\n        pollingInterval\n      );\n\n      this._stopCallbacks.push(() => {\n        Meteor.clearInterval(intervalHandle);\n      });\n    }\n\n    await this._unthrottledEnsurePollIsScheduled();\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", 1);\n  }\n\n  async _unthrottledEnsurePollIsScheduled(): Promise<void> {\n    if (this._pollsScheduledButNotStarted > 0) return;\n    ++this._pollsScheduledButNotStarted;\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  _suspendPolling(): void {\n    ++this._pollsScheduledButNotStarted;\n    this._taskQueue.runTask(() => {});\n\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n  }\n\n  async _resumePolling(): Promise<void> {\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  async _pollMongo(): Promise<void> {\n    --this._pollsScheduledButNotStarted;\n\n    if (this._stopped) return;\n\n    let first = false;\n    let newResults;\n    let oldResults = this._results;\n\n    if (!oldResults) {\n      first = true;\n      oldResults = this._ordered ? [] : new (LocalCollection as any)._IdMap;\n    }\n\n    this._testOnlyPollCallback?.();\n\n    const writesForCycle = this._pendingWrites;\n    this._pendingWrites = [];\n\n    try {\n      newResults = await this._cursor.getRawObjects(this._ordered);\n    } catch (e: any) {\n      if (first && typeof(e.code) === 'number') {\n        await this._multiplexer.queryError(\n          new Error(\n            `Exception while polling query ${\n              JSON.stringify(this._cursorDescription)\n            }: ${e.message}`\n          )\n        );\n      }\n\n      Array.prototype.push.apply(this._pendingWrites, writesForCycle);\n      Meteor._debug(`Exception while polling query ${\n        JSON.stringify(this._cursorDescription)}`, e);\n      return;\n    }\n\n    if (!this._stopped) {\n      (LocalCollection as any)._diffQueryChanges(\n        this._ordered, oldResults, newResults, this._multiplexer);\n    }\n\n    if (first) this._multiplexer.ready();\n\n    this._results = newResults;\n\n    await this._multiplexer.onFlush(async () => {\n      for (const w of writesForCycle) {\n        await w.committed();\n      }\n    });\n  }\n\n  async stop(): Promise<void> {\n    this._stopped = true;\n\n    for (const callback of this._stopCallbacks) {\n      await callback();\n    }\n\n    for (const w of this._pendingWrites) {\n      await w.committed();\n    }\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", -1);\n  }\n}"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","root":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\snntv\\OneDrive\\Documents\\AI Agent\\projects\\Meteor\\BlueSky\\packages\\mongo\\polling_observe_driver.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/polling_observe_driver.ts","inputSourceMap":{"version":3,"file":"packages/mongo/polling_observe_driver.ts","sourceRoot":"","sources":["packages/mongo/polling_observe_driver.ts"],"names":[],"mappings":"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","sourcesContent":["import throttle from 'lodash.throttle';\nimport { listenAll } from './mongo_driver';\nimport { ObserveMultiplexer } from './observe_multiplex';\n\ninterface PollingObserveDriverOptions {\n  cursorDescription: any;\n  mongoHandle: any;\n  ordered: boolean;\n  multiplexer: ObserveMultiplexer;\n  _testOnlyPollCallback?: () => void;\n}\n\nconst POLLING_THROTTLE_MS = +(process.env.METEOR_POLLING_THROTTLE_MS || '') || 50;\nconst POLLING_INTERVAL_MS = +(process.env.METEOR_POLLING_INTERVAL_MS || '') || 10 * 1000;\n\n/**\n * @class PollingObserveDriver\n *\n * One of two observe driver implementations.\n *\n * Characteristics:\n * - Caches the results of a query\n * - Reruns the query when necessary\n * - Suitable for cases where oplog tailing is not available or practical\n */\nexport class PollingObserveDriver {\n  private _options: PollingObserveDriverOptions;\n  private _cursorDescription: any;\n  private _mongoHandle: any;\n  private _ordered: boolean;\n  private _multiplexer: any;\n  private _stopCallbacks: Array<() => Promise<void>>;\n  private _stopped: boolean;\n  private _cursor: any;\n  private _results: any;\n  private _pollsScheduledButNotStarted: number;\n  private _pendingWrites: any[];\n  private _ensurePollIsScheduled: Function;\n  private _taskQueue: any;\n  private _testOnlyPollCallback?: () => void;\n\n  constructor(options: PollingObserveDriverOptions) {\n    this._options = options;\n    this._cursorDescription = options.cursorDescription;\n    this._mongoHandle = options.mongoHandle;\n    this._ordered = options.ordered;\n    this._multiplexer = options.multiplexer;\n    this._stopCallbacks = [];\n    this._stopped = false;\n\n    this._cursor = this._mongoHandle._createAsynchronousCursor(\n      this._cursorDescription);\n\n    this._results = null;\n    this._pollsScheduledButNotStarted = 0;\n    this._pendingWrites = [];\n\n    this._ensurePollIsScheduled = throttle(\n      this._unthrottledEnsurePollIsScheduled.bind(this),\n      this._cursorDescription.options.pollingThrottleMs || POLLING_THROTTLE_MS\n    );\n\n    this._taskQueue = new (Meteor as any)._AsynchronousQueue();\n  }\n\n  async _init(): Promise<void> {\n    const options = this._options;\n    const listenersHandle = await listenAll(\n      this._cursorDescription,\n      (notification: any) => {\n        const fence = (DDPServer as any)._getCurrentFence();\n        if (fence) {\n          this._pendingWrites.push(fence.beginWrite());\n        }\n        if (this._pollsScheduledButNotStarted === 0) {\n          this._ensurePollIsScheduled();\n        }\n      }\n    );\n\n    this._stopCallbacks.push(async () => { await listenersHandle.stop(); });\n\n    if (options._testOnlyPollCallback) {\n      this._testOnlyPollCallback = options._testOnlyPollCallback;\n    } else {\n      const pollingInterval =\n        this._cursorDescription.options.pollingIntervalMs ||\n        this._cursorDescription.options._pollingInterval ||\n        POLLING_INTERVAL_MS;\n\n      const intervalHandle = Meteor.setInterval(\n        this._ensurePollIsScheduled.bind(this),\n        pollingInterval\n      );\n\n      this._stopCallbacks.push(() => {\n        Meteor.clearInterval(intervalHandle);\n      });\n    }\n\n    await this._unthrottledEnsurePollIsScheduled();\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", 1);\n  }\n\n  async _unthrottledEnsurePollIsScheduled(): Promise<void> {\n    if (this._pollsScheduledButNotStarted > 0) return;\n    ++this._pollsScheduledButNotStarted;\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  _suspendPolling(): void {\n    ++this._pollsScheduledButNotStarted;\n    this._taskQueue.runTask(() => {});\n\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n  }\n\n  async _resumePolling(): Promise<void> {\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  async _pollMongo(): Promise<void> {\n    --this._pollsScheduledButNotStarted;\n\n    if (this._stopped) return;\n\n    let first = false;\n    let newResults;\n    let oldResults = this._results;\n\n    if (!oldResults) {\n      first = true;\n      oldResults = this._ordered ? [] : new (LocalCollection as any)._IdMap;\n    }\n\n    this._testOnlyPollCallback?.();\n\n    const writesForCycle = this._pendingWrites;\n    this._pendingWrites = [];\n\n    try {\n      newResults = await this._cursor.getRawObjects(this._ordered);\n    } catch (e: any) {\n      if (first && typeof(e.code) === 'number') {\n        await this._multiplexer.queryError(\n          new Error(\n            `Exception while polling query ${\n              JSON.stringify(this._cursorDescription)\n            }: ${e.message}`\n          )\n        );\n      }\n\n      Array.prototype.push.apply(this._pendingWrites, writesForCycle);\n      Meteor._debug(`Exception while polling query ${\n        JSON.stringify(this._cursorDescription)}`, e);\n      return;\n    }\n\n    if (!this._stopped) {\n      (LocalCollection as any)._diffQueryChanges(\n        this._ordered, oldResults, newResults, this._multiplexer);\n    }\n\n    if (first) this._multiplexer.ready();\n\n    this._results = newResults;\n\n    await this._multiplexer.onFlush(async () => {\n      for (const w of writesForCycle) {\n        await w.committed();\n      }\n    });\n  }\n\n  async stop(): Promise<void> {\n    this._stopped = true;\n\n    for (const callback of this._stopCallbacks) {\n      await callback();\n    }\n\n    for (const w of this._pendingWrites) {\n      await w.committed();\n    }\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", -1);\n  }\n}"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      PollingObserveDriver: () => PollingObserveDriver\n    });\n    let throttle;\n    module.link(\"lodash.throttle\", {\n      default(v) {\n        throttle = v;\n      }\n    }, 0);\n    let listenAll;\n    module.link(\"./mongo_driver\", {\n      listenAll(v) {\n        listenAll = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const POLLING_THROTTLE_MS = +(process.env.METEOR_POLLING_THROTTLE_MS || '') || 50;\n    const POLLING_INTERVAL_MS = +(process.env.METEOR_POLLING_INTERVAL_MS || '') || 10 * 1000;\n    /**\n     * @class PollingObserveDriver\n     *\n     * One of two observe driver implementations.\n     *\n     * Characteristics:\n     * - Caches the results of a query\n     * - Reruns the query when necessary\n     * - Suitable for cases where oplog tailing is not available or practical\n     */\n    class PollingObserveDriver {\n      constructor(options) {\n        this._options = void 0;\n        this._cursorDescription = void 0;\n        this._mongoHandle = void 0;\n        this._ordered = void 0;\n        this._multiplexer = void 0;\n        this._stopCallbacks = void 0;\n        this._stopped = void 0;\n        this._cursor = void 0;\n        this._results = void 0;\n        this._pollsScheduledButNotStarted = void 0;\n        this._pendingWrites = void 0;\n        this._ensurePollIsScheduled = void 0;\n        this._taskQueue = void 0;\n        this._testOnlyPollCallback = void 0;\n        this._options = options;\n        this._cursorDescription = options.cursorDescription;\n        this._mongoHandle = options.mongoHandle;\n        this._ordered = options.ordered;\n        this._multiplexer = options.multiplexer;\n        this._stopCallbacks = [];\n        this._stopped = false;\n        this._cursor = this._mongoHandle._createAsynchronousCursor(this._cursorDescription);\n        this._results = null;\n        this._pollsScheduledButNotStarted = 0;\n        this._pendingWrites = [];\n        this._ensurePollIsScheduled = throttle(this._unthrottledEnsurePollIsScheduled.bind(this), this._cursorDescription.options.pollingThrottleMs || POLLING_THROTTLE_MS);\n        this._taskQueue = new Meteor._AsynchronousQueue();\n      }\n      async _init() {\n        var _Package$factsBase;\n        const options = this._options;\n        const listenersHandle = await listenAll(this._cursorDescription, notification => {\n          const fence = DDPServer._getCurrentFence();\n          if (fence) {\n            this._pendingWrites.push(fence.beginWrite());\n          }\n          if (this._pollsScheduledButNotStarted === 0) {\n            this._ensurePollIsScheduled();\n          }\n        });\n        this._stopCallbacks.push(async () => {\n          await listenersHandle.stop();\n        });\n        if (options._testOnlyPollCallback) {\n          this._testOnlyPollCallback = options._testOnlyPollCallback;\n        } else {\n          const pollingInterval = this._cursorDescription.options.pollingIntervalMs || this._cursorDescription.options._pollingInterval || POLLING_INTERVAL_MS;\n          const intervalHandle = Meteor.setInterval(this._ensurePollIsScheduled.bind(this), pollingInterval);\n          this._stopCallbacks.push(() => {\n            Meteor.clearInterval(intervalHandle);\n          });\n        }\n        await this._unthrottledEnsurePollIsScheduled();\n        (_Package$factsBase = Package['facts-base']) === null || _Package$factsBase === void 0 ? void 0 : _Package$factsBase.Facts.incrementServerFact(\"mongo-livedata\", \"observe-drivers-polling\", 1);\n      }\n      async _unthrottledEnsurePollIsScheduled() {\n        if (this._pollsScheduledButNotStarted > 0) return;\n        ++this._pollsScheduledButNotStarted;\n        await this._taskQueue.runTask(async () => {\n          await this._pollMongo();\n        });\n      }\n      _suspendPolling() {\n        ++this._pollsScheduledButNotStarted;\n        this._taskQueue.runTask(() => {});\n        if (this._pollsScheduledButNotStarted !== 1) {\n          throw new Error(\"_pollsScheduledButNotStarted is \".concat(this._pollsScheduledButNotStarted));\n        }\n      }\n      async _resumePolling() {\n        if (this._pollsScheduledButNotStarted !== 1) {\n          throw new Error(\"_pollsScheduledButNotStarted is \".concat(this._pollsScheduledButNotStarted));\n        }\n        await this._taskQueue.runTask(async () => {\n          await this._pollMongo();\n        });\n      }\n      async _pollMongo() {\n        var _this$_testOnlyPollCa;\n        --this._pollsScheduledButNotStarted;\n        if (this._stopped) return;\n        let first = false;\n        let newResults;\n        let oldResults = this._results;\n        if (!oldResults) {\n          first = true;\n          oldResults = this._ordered ? [] : new LocalCollection._IdMap();\n        }\n        (_this$_testOnlyPollCa = this._testOnlyPollCallback) === null || _this$_testOnlyPollCa === void 0 ? void 0 : _this$_testOnlyPollCa.call(this);\n        const writesForCycle = this._pendingWrites;\n        this._pendingWrites = [];\n        try {\n          newResults = await this._cursor.getRawObjects(this._ordered);\n        } catch (e) {\n          if (first && typeof e.code === 'number') {\n            await this._multiplexer.queryError(new Error(\"Exception while polling query \".concat(JSON.stringify(this._cursorDescription), \": \").concat(e.message)));\n          }\n          Array.prototype.push.apply(this._pendingWrites, writesForCycle);\n          Meteor._debug(\"Exception while polling query \".concat(JSON.stringify(this._cursorDescription)), e);\n          return;\n        }\n        if (!this._stopped) {\n          LocalCollection._diffQueryChanges(this._ordered, oldResults, newResults, this._multiplexer);\n        }\n        if (first) this._multiplexer.ready();\n        this._results = newResults;\n        await this._multiplexer.onFlush(async () => {\n          for (const w of writesForCycle) {\n            await w.committed();\n          }\n        });\n      }\n      async stop() {\n        var _Package$factsBase2;\n        this._stopped = true;\n        for (const callback of this._stopCallbacks) {\n          await callback();\n        }\n        for (const w of this._pendingWrites) {\n          await w.committed();\n        }\n        (_Package$factsBase2 = Package['facts-base']) === null || _Package$factsBase2 === void 0 ? void 0 : _Package$factsBase2.Facts.incrementServerFact(\"mongo-livedata\", \"observe-drivers-polling\", -1);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","PollingObserveDriver","throttle","link","default","v","listenAll","__reifyWaitForDeps__","POLLING_THROTTLE_MS","process","env","METEOR_POLLING_THROTTLE_MS","POLLING_INTERVAL_MS","METEOR_POLLING_INTERVAL_MS","constructor","options","_options","_cursorDescription","_mongoHandle","_ordered","_multiplexer","_stopCallbacks","_stopped","_cursor","_results","_pollsScheduledButNotStarted","_pendingWrites","_ensurePollIsScheduled","_taskQueue","_testOnlyPollCallback","cursorDescription","mongoHandle","ordered","multiplexer","_createAsynchronousCursor","_unthrottledEnsurePollIsScheduled","bind","pollingThrottleMs","Meteor","_AsynchronousQueue","_init","_Package$factsBase","listenersHandle","notification","fence","DDPServer","_getCurrentFence","push","beginWrite","stop","pollingInterval","pollingIntervalMs","_pollingInterval","intervalHandle","setInterval","clearInterval","Package","Facts","incrementServerFact","runTask","_pollMongo","_suspendPolling","Error","concat","_resumePolling","_this$_testOnlyPollCa","first","newResults","oldResults","LocalCollection","_IdMap","call","writesForCycle","getRawObjects","e","code","queryError","JSON","stringify","message","Array","prototype","apply","_debug","_diffQueryChanges","ready","onFlush","w","committed","_Package$factsBase2","callback","__reify_async_result__","_reifyError","self","async"],"sources":["packages/mongo/polling_observe_driver.ts"],"sourcesContent":["import throttle from 'lodash.throttle';\nimport { listenAll } from './mongo_driver';\nimport { ObserveMultiplexer } from './observe_multiplex';\n\ninterface PollingObserveDriverOptions {\n  cursorDescription: any;\n  mongoHandle: any;\n  ordered: boolean;\n  multiplexer: ObserveMultiplexer;\n  _testOnlyPollCallback?: () => void;\n}\n\nconst POLLING_THROTTLE_MS = +(process.env.METEOR_POLLING_THROTTLE_MS || '') || 50;\nconst POLLING_INTERVAL_MS = +(process.env.METEOR_POLLING_INTERVAL_MS || '') || 10 * 1000;\n\n/**\n * @class PollingObserveDriver\n *\n * One of two observe driver implementations.\n *\n * Characteristics:\n * - Caches the results of a query\n * - Reruns the query when necessary\n * - Suitable for cases where oplog tailing is not available or practical\n */\nexport class PollingObserveDriver {\n  private _options: PollingObserveDriverOptions;\n  private _cursorDescription: any;\n  private _mongoHandle: any;\n  private _ordered: boolean;\n  private _multiplexer: any;\n  private _stopCallbacks: Array<() => Promise<void>>;\n  private _stopped: boolean;\n  private _cursor: any;\n  private _results: any;\n  private _pollsScheduledButNotStarted: number;\n  private _pendingWrites: any[];\n  private _ensurePollIsScheduled: Function;\n  private _taskQueue: any;\n  private _testOnlyPollCallback?: () => void;\n\n  constructor(options: PollingObserveDriverOptions) {\n    this._options = options;\n    this._cursorDescription = options.cursorDescription;\n    this._mongoHandle = options.mongoHandle;\n    this._ordered = options.ordered;\n    this._multiplexer = options.multiplexer;\n    this._stopCallbacks = [];\n    this._stopped = false;\n\n    this._cursor = this._mongoHandle._createAsynchronousCursor(\n      this._cursorDescription);\n\n    this._results = null;\n    this._pollsScheduledButNotStarted = 0;\n    this._pendingWrites = [];\n\n    this._ensurePollIsScheduled = throttle(\n      this._unthrottledEnsurePollIsScheduled.bind(this),\n      this._cursorDescription.options.pollingThrottleMs || POLLING_THROTTLE_MS\n    );\n\n    this._taskQueue = new (Meteor as any)._AsynchronousQueue();\n  }\n\n  async _init(): Promise<void> {\n    const options = this._options;\n    const listenersHandle = await listenAll(\n      this._cursorDescription,\n      (notification: any) => {\n        const fence = (DDPServer as any)._getCurrentFence();\n        if (fence) {\n          this._pendingWrites.push(fence.beginWrite());\n        }\n        if (this._pollsScheduledButNotStarted === 0) {\n          this._ensurePollIsScheduled();\n        }\n      }\n    );\n\n    this._stopCallbacks.push(async () => { await listenersHandle.stop(); });\n\n    if (options._testOnlyPollCallback) {\n      this._testOnlyPollCallback = options._testOnlyPollCallback;\n    } else {\n      const pollingInterval =\n        this._cursorDescription.options.pollingIntervalMs ||\n        this._cursorDescription.options._pollingInterval ||\n        POLLING_INTERVAL_MS;\n\n      const intervalHandle = Meteor.setInterval(\n        this._ensurePollIsScheduled.bind(this),\n        pollingInterval\n      );\n\n      this._stopCallbacks.push(() => {\n        Meteor.clearInterval(intervalHandle);\n      });\n    }\n\n    await this._unthrottledEnsurePollIsScheduled();\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", 1);\n  }\n\n  async _unthrottledEnsurePollIsScheduled(): Promise<void> {\n    if (this._pollsScheduledButNotStarted > 0) return;\n    ++this._pollsScheduledButNotStarted;\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  _suspendPolling(): void {\n    ++this._pollsScheduledButNotStarted;\n    this._taskQueue.runTask(() => {});\n\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n  }\n\n  async _resumePolling(): Promise<void> {\n    if (this._pollsScheduledButNotStarted !== 1) {\n      throw new Error(`_pollsScheduledButNotStarted is ${this._pollsScheduledButNotStarted}`);\n    }\n    await this._taskQueue.runTask(async () => {\n      await this._pollMongo();\n    });\n  }\n\n  async _pollMongo(): Promise<void> {\n    --this._pollsScheduledButNotStarted;\n\n    if (this._stopped) return;\n\n    let first = false;\n    let newResults;\n    let oldResults = this._results;\n\n    if (!oldResults) {\n      first = true;\n      oldResults = this._ordered ? [] : new (LocalCollection as any)._IdMap;\n    }\n\n    this._testOnlyPollCallback?.();\n\n    const writesForCycle = this._pendingWrites;\n    this._pendingWrites = [];\n\n    try {\n      newResults = await this._cursor.getRawObjects(this._ordered);\n    } catch (e: any) {\n      if (first && typeof(e.code) === 'number') {\n        await this._multiplexer.queryError(\n          new Error(\n            `Exception while polling query ${\n              JSON.stringify(this._cursorDescription)\n            }: ${e.message}`\n          )\n        );\n      }\n\n      Array.prototype.push.apply(this._pendingWrites, writesForCycle);\n      Meteor._debug(`Exception while polling query ${\n        JSON.stringify(this._cursorDescription)}`, e);\n      return;\n    }\n\n    if (!this._stopped) {\n      (LocalCollection as any)._diffQueryChanges(\n        this._ordered, oldResults, newResults, this._multiplexer);\n    }\n\n    if (first) this._multiplexer.ready();\n\n    this._results = newResults;\n\n    await this._multiplexer.onFlush(async () => {\n      for (const w of writesForCycle) {\n        await w.committed();\n      }\n    });\n  }\n\n  async stop(): Promise<void> {\n    this._stopped = true;\n\n    for (const callback of this._stopCallbacks) {\n      await callback();\n    }\n\n    for (const w of this._pendingWrites) {\n      await w.committed();\n    }\n\n    (Package['facts-base'] as any)?.Facts.incrementServerFact(\n      \"mongo-livedata\", \"observe-drivers-polling\", -1);\n  }\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ba51b816557044a0aa9d3bdd6c8874b54ce2539f"}
