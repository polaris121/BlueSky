{"version":3,"sources":["meteor://ðŸ’»app/imports/api/links.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","LinksCollection","Mongo","link","v","__reifyWaitForDeps__","Collection","__reify_async_result__","_reifyError","self","async","Meteor","insertLink","_ref","title","url","insertAsync","createdAt","Date","startup","find","countAsync","publish"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAAA,MAAM,CAACC,MAAM,CAAC;MAACC,eAAe,EAACA,CAAA,KAAIA;IAAe,CAAC,CAAC;IAAC,IAAIC,KAAK;IAACH,MAAM,CAACI,IAAI,CAAC,cAAc,EAAC;MAACD,KAAKA,CAACE,CAAC,EAAC;QAACF,KAAK,GAACE,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIC,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAEtK,MAAMJ,eAAe,GAAG,IAAIC,KAAK,CAACI,UAAU,CAAC,OAAO,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA,G;;;;;;;;;;;;;;ICF7D,IAAIC,MAAM;IAACZ,MAAM,CAACI,IAAI,CAAC,eAAe,EAAC;MAACQ,MAAMA,CAACP,CAAC,EAAC;QAACO,MAAM,GAACP,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIH,eAAe;IAACF,MAAM,CAACI,IAAI,CAAC,oBAAoB,EAAC;MAACF,eAAeA,CAACG,CAAC,EAAC;QAACH,eAAe,GAACG,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIC,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAG5N,eAAeO,UAAUA,CAAAC,IAAA,EAAiB;MAAA,IAAhB;QAAEC,KAAK;QAAEC;MAAI,CAAC,GAAAF,IAAA;MACtC,MAAMZ,eAAe,CAACe,WAAW,CAAC;QAAEF,KAAK;QAAEC,GAAG;QAAEE,SAAS,EAAE,IAAIC,IAAI,CAAC;MAAE,CAAC,CAAC;IAC1E;IAEAP,MAAM,CAACQ,OAAO,CAAC,YAAY;MACzB;MACA,IAAI,OAAMlB,eAAe,CAACmB,IAAI,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,MAAK,CAAC,EAAE;QACnD,MAAMT,UAAU,CAAC;UACfE,KAAK,EAAE,iBAAiB;UACxBC,GAAG,EAAE;QACP,CAAC,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,kBAAkB;UACzBC,GAAG,EAAE;QACP,CAAC,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,eAAe;UACtBC,GAAG,EAAE;QACP,CAAC,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,aAAa;UACpBC,GAAG,EAAE;QACP,CAAC,CAAC;MACJ;;MAEA;MACA;MACAJ,MAAM,CAACW,OAAO,CAAC,OAAO,EAAE,YAAY;QAClC,OAAOrB,eAAe,CAACmB,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;IAACb,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA,G","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\nexport const LinksCollection = new Mongo.Collection('links');\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { LinksCollection } from '/imports/api/links';\r\n\r\nasync function insertLink({ title, url }) {\r\n  await LinksCollection.insertAsync({ title, url, createdAt: new Date() });\r\n}\r\n\r\nMeteor.startup(async () => {\r\n  // If the Links collection is empty, add some data.\r\n  if (await LinksCollection.find().countAsync() === 0) {\r\n    await insertLink({\r\n      title: 'Do the Tutorial',\r\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app',\r\n    });\r\n\r\n    await insertLink({\r\n      title: 'Follow the Guide',\r\n      url: 'https://guide.meteor.com',\r\n    });\r\n\r\n    await insertLink({\r\n      title: 'Read the Docs',\r\n      url: 'https://docs.meteor.com',\r\n    });\r\n\r\n    await insertLink({\r\n      title: 'Discussions',\r\n      url: 'https://forums.meteor.com',\r\n    });\r\n  }\r\n\r\n  // We publish the entire Links collection to all clients.\r\n  // In order to be fetched in real-time to the clients\r\n  Meteor.publish(\"links\", function () {\r\n    return LinksCollection.find();\r\n  });\r\n});\r\n"]}